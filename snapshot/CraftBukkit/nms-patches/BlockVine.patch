--- a/net/minecraft/server/BlockVine.java
+++ b/net/minecraft/server/BlockVine.java
@@ -4,6 +4,8 @@
 import java.util.Random;
 import javax.annotation.Nullable;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory; // CraftBukkit
+
 public class BlockVine extends Block {
 
     public static final BlockStateBoolean UP = BlockStateBoolean.of("up");
@@ -20,7 +22,7 @@
 
     public BlockVine() {
         super(Material.REPLACEABLE_PLANT);
-        this.w(this.blockStateList.getBlockData().set(BlockVine.UP, Boolean.valueOf(false)).set(BlockVine.NORTH, Boolean.valueOf(false)).set(BlockVine.EAST, Boolean.valueOf(false)).set(BlockVine.SOUTH, Boolean.valueOf(false)).set(BlockVine.WEST, Boolean.valueOf(false)));
+        this.y(this.blockStateList.getBlockData().set(BlockVine.UP, Boolean.valueOf(false)).set(BlockVine.NORTH, Boolean.valueOf(false)).set(BlockVine.EAST, Boolean.valueOf(false)).set(BlockVine.SOUTH, Boolean.valueOf(false)).set(BlockVine.WEST, Boolean.valueOf(false)));
         this.a(true);
         this.a(CreativeModeTab.c);
     }
@@ -31,7 +33,7 @@
     }
 
     public AxisAlignedBB b(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
-        iblockdata = iblockdata.c(iblockaccess, blockposition);
+        iblockdata = iblockdata.b(iblockaccess, blockposition);
         int i = 0;
         AxisAlignedBB axisalignedbb = BlockVine.j;
 
@@ -64,9 +66,7 @@
     }
 
     public IBlockData updateState(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
-        BlockPosition blockposition1 = blockposition.up();
-
-        return iblockdata.set(BlockVine.UP, Boolean.valueOf(iblockaccess.getType(blockposition1).d(iblockaccess, blockposition1, EnumDirection.DOWN) == EnumBlockFaceShape.SOLID));
+        return iblockdata.set(BlockVine.UP, Boolean.valueOf(iblockaccess.getType(blockposition.up()).l()));
     }
 
     public boolean b(IBlockData iblockdata) {
@@ -82,23 +82,23 @@
     }
 
     public boolean canPlace(World world, BlockPosition blockposition, EnumDirection enumdirection) {
-        return enumdirection != EnumDirection.DOWN && enumdirection != EnumDirection.UP && this.a(world, blockposition, enumdirection);
-    }
-
-    public boolean a(World world, BlockPosition blockposition, EnumDirection enumdirection) {
-        Block block = world.getType(blockposition.up()).getBlock();
-
-        return this.c(world, blockposition.shift(enumdirection.opposite()), enumdirection) && (block == Blocks.AIR || block == Blocks.VINE || this.c(world, blockposition.up(), EnumDirection.UP));
-    }
+        switch (enumdirection) {
+        case UP:
+            return this.z(world.getType(blockposition.up()));
 
-    private boolean c(World world, BlockPosition blockposition, EnumDirection enumdirection) {
-        IBlockData iblockdata = world.getType(blockposition);
+        case NORTH:
+        case SOUTH:
+        case EAST:
+        case WEST:
+            return this.z(world.getType(blockposition.shift(enumdirection.opposite())));
 
-        return iblockdata.d(world, blockposition, enumdirection) == EnumBlockFaceShape.SOLID && !e(iblockdata.getBlock());
+        default:
+            return false;
+        }
     }
 
-    protected static boolean e(Block block) {
-        return block instanceof BlockShulkerBox || block == Blocks.BEACON || block == Blocks.cauldron || block == Blocks.GLASS || block == Blocks.STAINED_GLASS || block == Blocks.PISTON || block == Blocks.STICKY_PISTON || block == Blocks.PISTON_HEAD || block == Blocks.TRAPDOOR;
+    private boolean z(IBlockData iblockdata) {
+        return iblockdata.h() && iblockdata.getMaterial().isSolid();
     }
 
     private boolean e(World world, BlockPosition blockposition, IBlockData iblockdata) {
@@ -109,7 +109,7 @@
             EnumDirection enumdirection = (EnumDirection) iterator.next();
             BlockStateBoolean blockstateboolean = getDirection(enumdirection);
 
-            if (((Boolean) iblockdata.get(blockstateboolean)).booleanValue() && !this.a(world, blockposition, enumdirection.opposite())) {
+            if (((Boolean) iblockdata.get(blockstateboolean)).booleanValue() && !this.z(world.getType(blockposition.shift(enumdirection)))) {
                 IBlockData iblockdata2 = world.getType(blockposition.up());
 
                 if (iblockdata2.getBlock() != this || !((Boolean) iblockdata2.get(blockstateboolean)).booleanValue()) {
@@ -118,7 +118,7 @@
             }
         }
 
-        if (x(iblockdata) == 0) {
+        if (i(iblockdata) == 0) {
             return false;
         } else {
             if (iblockdata1 != iblockdata) {
@@ -144,7 +144,7 @@
                 int i = 5;
                 boolean flag1 = false;
 
-                label178:
+                label188:
                 for (int j = -4; j <= 4; ++j) {
                     for (int k = -4; k <= 4; ++k) {
                         for (int l = -1; l <= 1; ++l) {
@@ -152,7 +152,7 @@
                                 --i;
                                 if (i <= 0) {
                                     flag1 = true;
-                                    break label178;
+                                    break label188;
                                 }
                             }
                         }
@@ -163,23 +163,29 @@
                 BlockPosition blockposition1 = blockposition.up();
 
                 if (enumdirection == EnumDirection.UP && blockposition.getY() < 255 && world.isEmpty(blockposition1)) {
-                    IBlockData iblockdata1 = iblockdata;
-                    Iterator iterator = EnumDirection.EnumDirectionLimit.HORIZONTAL.iterator();
+                    if (!flag1) {
+                        IBlockData iblockdata1 = iblockdata;
+                        Iterator iterator = EnumDirection.EnumDirectionLimit.HORIZONTAL.iterator();
 
-                    while (iterator.hasNext()) {
-                        EnumDirection enumdirection1 = (EnumDirection) iterator.next();
+                        while (iterator.hasNext()) {
+                            EnumDirection enumdirection1 = (EnumDirection) iterator.next();
 
-                        if (random.nextBoolean() && this.a(world, blockposition1, enumdirection1.opposite())) {
-                            iblockdata1 = iblockdata1.set(getDirection(enumdirection1), Boolean.valueOf(true));
-                        } else {
-                            iblockdata1 = iblockdata1.set(getDirection(enumdirection1), Boolean.valueOf(false));
+                            if (random.nextBoolean() || !this.z(world.getType(blockposition1.shift(enumdirection1)))) {
+                                iblockdata1 = iblockdata1.set(getDirection(enumdirection1), Boolean.valueOf(false));
+                            }
                         }
-                    }
 
-                    if (((Boolean) iblockdata1.get(BlockVine.NORTH)).booleanValue() || ((Boolean) iblockdata1.get(BlockVine.EAST)).booleanValue() || ((Boolean) iblockdata1.get(BlockVine.SOUTH)).booleanValue() || ((Boolean) iblockdata1.get(BlockVine.WEST)).booleanValue()) {
-                        world.setTypeAndData(blockposition1, iblockdata1, 2);
-                    }
+                        if (((Boolean) iblockdata1.get(BlockVine.NORTH)).booleanValue() || ((Boolean) iblockdata1.get(BlockVine.EAST)).booleanValue() || ((Boolean) iblockdata1.get(BlockVine.SOUTH)).booleanValue() || ((Boolean) iblockdata1.get(BlockVine.WEST)).booleanValue()) {
+                            // CraftBukkit start - Call BlockSpreadEvent
+                            // world.setTypeAndData(blockposition1, iblockdata1, 2);
+                            BlockPosition target = blockposition1;
+                            org.bukkit.block.Block source = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ());
+                            org.bukkit.block.Block block = world.getWorld().getBlockAt(target.getX(), target.getY(), target.getZ());
+                            CraftEventFactory.handleBlockSpreadEvent(block, source, this, toLegacyData(iblockdata1));
+                            // CraftBukkit end
+                        }
 
+                    }
                 } else {
                     IBlockData iblockdata2;
                     Block block;
@@ -198,16 +204,30 @@
                                 BlockPosition blockposition3 = blockposition2.shift(enumdirection2);
                                 BlockPosition blockposition4 = blockposition2.shift(enumdirection3);
 
-                                if (flag2 && this.a(world, blockposition3.shift(enumdirection2), enumdirection2)) {
-                                    world.setTypeAndData(blockposition2, this.getBlockData().set(getDirection(enumdirection2), Boolean.valueOf(true)), 2);
-                                } else if (flag3 && this.a(world, blockposition4.shift(enumdirection3), enumdirection3)) {
-                                    world.setTypeAndData(blockposition2, this.getBlockData().set(getDirection(enumdirection3), Boolean.valueOf(true)), 2);
-                                } else if (flag2 && world.isEmpty(blockposition3) && this.a(world, blockposition3, enumdirection)) {
-                                    world.setTypeAndData(blockposition3, this.getBlockData().set(getDirection(enumdirection.opposite()), Boolean.valueOf(true)), 2);
-                                } else if (flag3 && world.isEmpty(blockposition4) && this.a(world, blockposition4, enumdirection)) {
-                                    world.setTypeAndData(blockposition4, this.getBlockData().set(getDirection(enumdirection.opposite()), Boolean.valueOf(true)), 2);
+                                // CraftBukkit start - Call BlockSpreadEvent
+                                org.bukkit.block.Block source = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ());
+                                org.bukkit.block.Block bukkitBlock = world.getWorld().getBlockAt(blockposition2.getX(), blockposition2.getY(), blockposition2.getZ());
+
+                                if (flag2 && this.z(world.getType(blockposition3))) {
+                                    // world.setTypeAndData(blockposition2, this.getBlockData().set(getDirection(enumdirection2), Boolean.valueOf(true)), 2);
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, toLegacyData(this.getBlockData().set(getDirection(enumdirection2), Boolean.valueOf(true))));
+                                } else if (flag3 && this.z(world.getType(blockposition4))) {
+                                    // world.setTypeAndData(blockposition2, this.getBlockData().set(getDirection(enumdirection3), Boolean.valueOf(true)), 2);
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, toLegacyData(this.getBlockData().set(getDirection(enumdirection3), Boolean.valueOf(true))));
+                                } else if (flag2 && world.isEmpty(blockposition3) && this.z(world.getType(blockposition.shift(enumdirection2)))) {
+                                    // world.setTypeAndData(blockposition3, this.getBlockData().set(getDirection(enumdirection.opposite()), Boolean.valueOf(true)), 2);
+                                    bukkitBlock = world.getWorld().getBlockAt(blockposition3.getX(), blockposition3.getY(), blockposition3.getZ());
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, toLegacyData(this.getBlockData().set(getDirection(enumdirection.opposite()), Boolean.valueOf(true))));
+                                } else if (flag3 && world.isEmpty(blockposition4) && this.z(world.getType(blockposition.shift(enumdirection3)))) {
+                                    // world.setTypeAndData(blockposition4, this.getBlockData().set(getDirection(enumdirection.opposite()), Boolean.valueOf(true)), 2);
+                                    bukkitBlock = world.getWorld().getBlockAt(blockposition4.getX(), blockposition4.getY(), blockposition4.getZ());
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, toLegacyData(this.getBlockData().set(getDirection(enumdirection.opposite()), Boolean.valueOf(true))));
+                                } else if (this.z(world.getType(blockposition2.up()))) {
+                                    // world.setTypeAndData(blockposition2, this.getBlockData(), 2);
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, toLegacyData(this.getBlockData()));
                                 }
-                            } else if (iblockdata2.d(world, blockposition2, enumdirection) == EnumBlockFaceShape.SOLID) {
+                                // CraftBukkit end
+                            } else if (block.material.k() && iblockdata2.h()) {
                                 world.setTypeAndData(blockposition, iblockdata.set(getDirection(enumdirection), Boolean.valueOf(true)), 2);
                             }
 
@@ -233,7 +253,12 @@
                                 }
 
                                 if (((Boolean) iblockdata3.get(BlockVine.NORTH)).booleanValue() || ((Boolean) iblockdata3.get(BlockVine.EAST)).booleanValue() || ((Boolean) iblockdata3.get(BlockVine.SOUTH)).booleanValue() || ((Boolean) iblockdata3.get(BlockVine.WEST)).booleanValue()) {
-                                    world.setTypeAndData(blockposition2, iblockdata3, 2);
+                                    // CraftBukkit start - Call BlockSpreadEvent
+                                    // world.setTypeAndData(blockposition2, iblockdata3, 2);
+                                    org.bukkit.block.Block source = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ());
+                                    org.bukkit.block.Block bukkitBlock = world.getWorld().getBlockAt(blockposition2.getX(), blockposition2.getY(), blockposition2.getZ());
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, toLegacyData(iblockdata3));
+                                    // CraftBukkit end
                                 }
                             } else if (block == this) {
                                 iblockdata3 = iblockdata2;
@@ -354,18 +379,18 @@
         case SOUTH:
             return BlockVine.SOUTH;
 
-        case WEST:
-            return BlockVine.WEST;
-
         case EAST:
             return BlockVine.EAST;
 
+        case WEST:
+            return BlockVine.WEST;
+
         default:
             throw new IllegalArgumentException(enumdirection + " is an invalid choice");
         }
     }
 
-    public static int x(IBlockData iblockdata) {
+    public static int i(IBlockData iblockdata) {
         int i = 0;
         BlockStateBoolean[] ablockstateboolean = BlockVine.f;
         int j = ablockstateboolean.length;
@@ -380,8 +405,4 @@
 
         return i;
     }
-
-    public EnumBlockFaceShape a(IBlockAccess iblockaccess, IBlockData iblockdata, BlockPosition blockposition, EnumDirection enumdirection) {
-        return EnumBlockFaceShape.UNDEFINED;
-    }
 }
