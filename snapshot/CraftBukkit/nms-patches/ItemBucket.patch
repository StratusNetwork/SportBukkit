--- a/net/minecraft/server/ItemBucket.java
+++ b/net/minecraft/server/ItemBucket.java
@@ -1,6 +1,12 @@
 package net.minecraft.server;
 
 import javax.annotation.Nullable;
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.player.PlayerBucketEmptyEvent;
+import org.bukkit.event.player.PlayerBucketFillEvent;
+// CraftBukkit end
 
 public class ItemBucket extends Item {
 
@@ -9,7 +15,7 @@
     public ItemBucket(Block block) {
         this.maxStackSize = 1;
         this.a = block;
-        this.b(CreativeModeTab.f);
+        this.a(CreativeModeTab.f);
     }
 
     public InteractionResultWrapper<ItemStack> a(World world, EntityHuman entityhuman, EnumHand enumhand) {
@@ -34,15 +40,29 @@
                     Material material = iblockdata.getMaterial();
 
                     if (material == Material.WATER && ((Integer) iblockdata.get(BlockFluids.LEVEL)).intValue() == 0) {
+                        // CraftBukkit start
+                        PlayerBucketFillEvent event = CraftEventFactory.callPlayerBucketFillEvent(entityhuman, blockposition.getX(), blockposition.getY(), blockposition.getZ(), null, itemstack, Items.WATER_BUCKET);
+ 
+                        if (event.isCancelled()) {
+                            return new InteractionResultWrapper(EnumInteractionResult.FAIL, itemstack);
+                        }
+                        // CraftBukkit end
                         world.setTypeAndData(blockposition, Blocks.AIR.getBlockData(), 11);
                         entityhuman.b(StatisticList.b((Item) this));
-                        entityhuman.a(SoundEffects.S, 1.0F, 1.0F);
-                        return new InteractionResultWrapper(EnumInteractionResult.SUCCESS, this.a(itemstack, entityhuman, Items.WATER_BUCKET));
+                        entityhuman.a(SoundEffects.P, 1.0F, 1.0F);
+                        return new InteractionResultWrapper(EnumInteractionResult.SUCCESS, this.a(itemstack, entityhuman, Items.WATER_BUCKET, event.getItemStack())); // CraftBukkit
                     } else if (material == Material.LAVA && ((Integer) iblockdata.get(BlockFluids.LEVEL)).intValue() == 0) {
-                        entityhuman.a(SoundEffects.T, 1.0F, 1.0F);
+                        // CraftBukkit start
+                        PlayerBucketFillEvent event = CraftEventFactory.callPlayerBucketFillEvent(entityhuman, blockposition.getX(), blockposition.getY(), blockposition.getZ(), null, itemstack, Items.LAVA_BUCKET);
+
+                        if (event.isCancelled()) {
+                            return new InteractionResultWrapper(EnumInteractionResult.FAIL, itemstack);
+                        }
+                        // CraftBukkit end
+                        entityhuman.a(SoundEffects.Q, 1.0F, 1.0F);
                         world.setTypeAndData(blockposition, Blocks.AIR.getBlockData(), 11);
                         entityhuman.b(StatisticList.b((Item) this));
-                        return new InteractionResultWrapper(EnumInteractionResult.SUCCESS, this.a(itemstack, entityhuman, Items.LAVA_BUCKET));
+                        return new InteractionResultWrapper(EnumInteractionResult.SUCCESS, this.a(itemstack, entityhuman, Items.LAVA_BUCKET, event.getItemStack())); // CraftBukkit
                     } else {
                         return new InteractionResultWrapper(EnumInteractionResult.FAIL, itemstack);
                     }
@@ -53,11 +73,7 @@
 
                 if (!entityhuman.a(blockposition1, movingobjectposition.direction, itemstack)) {
                     return new InteractionResultWrapper(EnumInteractionResult.FAIL, itemstack);
-                } else if (this.a(entityhuman, world, blockposition1)) {
-                    if (entityhuman instanceof EntityPlayer) {
-                        CriterionTriggers.x.a((EntityPlayer) entityhuman, blockposition1, itemstack);
-                    }
-
+                } else if (this.a(entityhuman, world, blockposition1, movingobjectposition.direction, blockposition, itemstack)) { // CraftBukkit
                     entityhuman.b(StatisticList.b((Item) this));
                     return !entityhuman.abilities.canInstantlyBuild ? new InteractionResultWrapper(EnumInteractionResult.SUCCESS, new ItemStack(Items.BUCKET)) : new InteractionResultWrapper(EnumInteractionResult.SUCCESS, itemstack);
                 } else {
@@ -67,16 +83,19 @@
         }
     }
 
-    private ItemStack a(ItemStack itemstack, EntityHuman entityhuman, Item item) {
+    // CraftBukkit - added ob.ItemStack result - TODO: Is this... the right way to handle this?
+    private ItemStack a(ItemStack itemstack, EntityHuman entityhuman, Item item, org.bukkit.inventory.ItemStack result) {
         if (entityhuman.abilities.canInstantlyBuild) {
             return itemstack;
         } else {
             itemstack.subtract(1);
             if (itemstack.isEmpty()) {
-                return new ItemStack(item);
+                // CraftBukkit start
+                return CraftItemStack.asNMSCopy(result);
             } else {
-                if (!entityhuman.inventory.pickup(new ItemStack(item))) {
-                    entityhuman.drop(new ItemStack(item), false);
+                if (!entityhuman.inventory.pickup(CraftItemStack.asNMSCopy(result))) {
+                    entityhuman.drop(CraftItemStack.asNMSCopy(result), false);
+                    // CraftBukkit end
                 }
 
                 return itemstack;
@@ -84,7 +103,13 @@
         }
     }
 
+    // CraftBukkit start
     public boolean a(@Nullable EntityHuman entityhuman, World world, BlockPosition blockposition) {
+        return a(entityhuman, world, blockposition, null, blockposition, null);
+    }
+
+    public boolean a(EntityHuman entityhuman, World world, BlockPosition blockposition, EnumDirection enumdirection, BlockPosition clicked, ItemStack itemstack) {
+        // CraftBukkit end
         if (this.a == Blocks.AIR) {
             return false;
         } else {
@@ -96,12 +121,21 @@
             if (!world.isEmpty(blockposition) && !flag && !flag1) {
                 return false;
             } else {
+                // CraftBukkit start
+                if (entityhuman != null) {
+                    PlayerBucketEmptyEvent event = CraftEventFactory.callPlayerBucketEmptyEvent(entityhuman, clicked.getX(), clicked.getY(), clicked.getZ(), enumdirection, itemstack);
+                    if (event.isCancelled()) {
+                        // TODO: inventory not updated
+                        return false;
+                    }
+                }
+                // CraftBukkit end
                 if (world.worldProvider.l() && this.a == Blocks.FLOWING_WATER) {
                     int i = blockposition.getX();
                     int j = blockposition.getY();
                     int k = blockposition.getZ();
 
-                    world.a(entityhuman, blockposition, SoundEffects.bN, SoundCategory.BLOCKS, 0.5F, 2.6F + (world.random.nextFloat() - world.random.nextFloat()) * 0.8F);
+                    world.a(entityhuman, blockposition, SoundEffects.bH, SoundCategory.BLOCKS, 0.5F, 2.6F + (world.random.nextFloat() - world.random.nextFloat()) * 0.8F);
 
                     for (int l = 0; l < 8; ++l) {
                         world.addParticle(EnumParticle.SMOKE_LARGE, (double) i + Math.random(), (double) j + Math.random(), (double) k + Math.random(), 0.0D, 0.0D, 0.0D, new int[0]);
@@ -111,7 +145,7 @@
                         world.setAir(blockposition, true);
                     }
 
-                    SoundEffect soundeffect = this.a == Blocks.FLOWING_LAVA ? SoundEffects.R : SoundEffects.Q;
+                    SoundEffect soundeffect = this.a == Blocks.FLOWING_LAVA ? SoundEffects.O : SoundEffects.N;
 
                     world.a(entityhuman, blockposition, soundeffect, SoundCategory.BLOCKS, 1.0F, 1.0F);
                     world.setTypeAndData(blockposition, this.a.getBlockData(), 11);
