--- a/net/minecraft/server/BlockFlowing.java
+++ b/net/minecraft/server/BlockFlowing.java
@@ -5,6 +5,11 @@
 import java.util.Random;
 import java.util.Set;
 
+// CraftBukkit start
+import org.bukkit.block.BlockFace;
+import org.bukkit.event.block.BlockFromToEvent;
+// CraftBukkit end
+
 public class BlockFlowing extends BlockFluids {
 
     int a;
@@ -45,7 +50,7 @@
                 i1 = -1;
             }
 
-            k = this.x(world.getType(blockposition.up()));
+            k = this.i(world.getType(blockposition.up()));
             if (k >= 0) {
                 if (k >= 8) {
                     i1 = k;
@@ -85,12 +90,25 @@
             this.f(world, blockposition, iblockdata);
         }
 
+        org.bukkit.block.Block source = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ()); // CraftBukkit
         IBlockData iblockdata2 = world.getType(blockposition.down());
 
         if (this.h(world, blockposition.down(), iblockdata2)) {
+            // CraftBukkit start
+            BlockFromToEvent event = new BlockFromToEvent(source, BlockFace.DOWN);
+            world.getServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                return;
+            }
+            // CraftBukkit end
+
             if (this.material == Material.LAVA && world.getType(blockposition.down()).getMaterial() == Material.WATER) {
-                world.setTypeUpdate(blockposition.down(), Blocks.STONE.getBlockData());
-                this.fizz(world, blockposition.down());
+                // CraftBukkit start
+                if (org.bukkit.craftbukkit.event.CraftEventFactory.handleBlockFormEvent(world, blockposition.down(), Blocks.STONE, null)) {
+                    this.fizz(world, blockposition.down());
+                }
+                // CraftBukkit end
                 return;
             }
 
@@ -116,14 +134,23 @@
             while (iterator1.hasNext()) {
                 EnumDirection enumdirection1 = (EnumDirection) iterator1.next();
 
-                this.flow(world, blockposition.shift(enumdirection1), world.getType(blockposition.shift(enumdirection1)), k);
+                if(!this.h(world, blockposition.shift(enumdirection1), world.getType(blockposition.shift(enumdirection1)))) continue; // SportBukkit - skip event if flow is obstructed
+
+                // CraftBukkit start
+                BlockFromToEvent event = new BlockFromToEvent(source, org.bukkit.craftbukkit.block.CraftBlock.notchToBlockFace(enumdirection1));
+                world.getServer().getPluginManager().callEvent(event);
+
+                if (!event.isCancelled()) {
+                    this.flow(world, blockposition.shift(enumdirection1), world.getType(blockposition.shift(enumdirection1)), k);
+                }
+                // CraftBukkit end
             }
         }
 
     }
 
     private void flow(World world, BlockPosition blockposition, IBlockData iblockdata, int i) {
-        if (this.h(world, blockposition, iblockdata)) {
+        if (world.isLoaded(blockposition) && this.h(world, blockposition, iblockdata)) { // CraftBukkit - add isLoaded check
             if (iblockdata.getMaterial() != Material.AIR) {
                 if (this.material == Material.LAVA) {
                     this.fizz(world, blockposition);
@@ -211,7 +238,7 @@
     }
 
     protected int a(World world, BlockPosition blockposition, int i) {
-        int j = this.x(world.getType(blockposition));
+        int j = this.i(world.getType(blockposition));
 
         if (j < 0) {
             return i;
