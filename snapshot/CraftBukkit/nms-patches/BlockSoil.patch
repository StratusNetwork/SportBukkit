--- a/net/minecraft/server/BlockSoil.java
+++ b/net/minecraft/server/BlockSoil.java
@@ -4,6 +4,11 @@
 import java.util.List;
 import java.util.Random;
 
+// CraftBukkit start
+import org.bukkit.event.entity.EntityInteractEvent;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+// CraftBukkit end
+
 public class BlockSoil extends Block {
 
     public static final BlockStateInteger MOISTURE = BlockStateInteger.of("moisture", 0, 7);
@@ -11,9 +16,9 @@
 
     protected BlockSoil() {
         super(Material.EARTH);
-        this.w(this.blockStateList.getBlockData().set(BlockSoil.MOISTURE, Integer.valueOf(0)));
+        this.y(this.blockStateList.getBlockData().set(BlockSoil.MOISTURE, Integer.valueOf(0)));
         this.a(true);
-        this.e(255);
+        this.d(255);
     }
 
     public AxisAlignedBB b(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
@@ -35,6 +40,12 @@
             if (i > 0) {
                 world.setTypeAndData(blockposition, iblockdata.set(BlockSoil.MOISTURE, Integer.valueOf(i - 1)), 2);
             } else if (!this.c(world, blockposition)) {
+                // CraftBukkit start
+                org.bukkit.block.Block block = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ());
+                if (CraftEventFactory.callBlockFadeEvent(block, Blocks.DIRT).isCancelled()) {
+                    return;
+                }
+                // CraftBukkit end
                 this.b(world, blockposition);
             }
         } else if (i < 7) {
@@ -44,18 +55,36 @@
     }
 
     public void fallOn(World world, BlockPosition blockposition, Entity entity, float f) {
+        super.fallOn(world, blockposition, entity, f); // CraftBukkit - moved here as game rules / events shouldn't affect fall damage.
         if (!world.isClientSide && world.random.nextFloat() < f - 0.5F && entity instanceof EntityLiving && (entity instanceof EntityHuman || world.getGameRules().getBoolean("mobGriefing")) && entity.width * entity.width * entity.length > 0.512F) {
+            // CraftBukkit start - Interact soil
+            org.bukkit.event.Cancellable cancellable;
+            if (entity instanceof EntityHuman) {
+                cancellable = CraftEventFactory.callPlayerInteractEvent((EntityHuman) entity, org.bukkit.event.block.Action.PHYSICAL, blockposition, null, null, null);
+            } else {
+                cancellable = new EntityInteractEvent(entity.getBukkitEntity(), world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ()));
+                world.getServer().getPluginManager().callEvent((EntityInteractEvent) cancellable);
+            }
+
+            if (cancellable.isCancelled()) {
+                return;
+            }
+
+            if (CraftEventFactory.callEntityChangeBlockEvent(entity, blockposition, Blocks.DIRT, 0).isCancelled()) {
+                return;
+            }
+            // CraftBukkit end
             this.b(world, blockposition);
         }
 
-        super.fallOn(world, blockposition, entity, f);
+        // super.fallOn(world, blockposition, entity, f); // CraftBukkit - moved up
     }
 
     private void b(World world, BlockPosition blockposition) {
         IBlockData iblockdata = Blocks.DIRT.getBlockData();
 
         world.setTypeUpdate(blockposition, iblockdata);
-        AxisAlignedBB axisalignedbb = iblockdata.d(world, blockposition).a(blockposition);
+        AxisAlignedBB axisalignedbb = iblockdata.c(world, blockposition).a(blockposition);
         List list = world.getEntities((Entity) null, axisalignedbb);
         Iterator iterator = list.iterator();
 
@@ -120,8 +149,4 @@
     protected BlockStateList getStateList() {
         return new BlockStateList(this, new IBlockState[] { BlockSoil.MOISTURE});
     }
-
-    public EnumBlockFaceShape a(IBlockAccess iblockaccess, IBlockData iblockdata, BlockPosition blockposition, EnumDirection enumdirection) {
-        return enumdirection == EnumDirection.DOWN ? EnumBlockFaceShape.SOLID : EnumBlockFaceShape.UNDEFINED;
-    }
 }
