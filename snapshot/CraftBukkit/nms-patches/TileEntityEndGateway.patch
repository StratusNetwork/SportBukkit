--- a/net/minecraft/server/TileEntityEndGateway.java
+++ b/net/minecraft/server/TileEntityEndGateway.java
@@ -6,6 +6,12 @@
 import javax.annotation.Nullable;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+// CraftBukkit start
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.event.player.PlayerTeleportEvent;
+// CraftBukkit end
 
 public class TileEntityEndGateway extends TileEntityEnderPortal implements ITickable {
 
@@ -41,9 +47,9 @@
         this.exactTeleport = nbttagcompound.getBoolean("ExactTeleport");
     }
 
-    public void e() {
+    public void F_() {
         boolean flag = this.a();
-        boolean flag1 = this.f();
+        boolean flag1 = this.e();
 
         ++this.f;
         if (flag1) {
@@ -56,11 +62,11 @@
             }
 
             if (this.f % 2400L == 0L) {
-                this.h();
+                this.f();
             }
         }
 
-        if (flag != this.a() || flag1 != this.f()) {
+        if (flag != this.a() || flag1 != this.e()) {
             this.update();
         }
 
@@ -70,7 +76,7 @@
         return this.f < 200L;
     }
 
-    public boolean f() {
+    public boolean e() {
         return this.g > 0;
     }
 
@@ -83,7 +89,7 @@
         return this.save(new NBTTagCompound());
     }
 
-    public void h() {
+    public void f() {
         if (!this.world.isClientSide) {
             this.g = 40;
             this.world.playBlockAction(this.getPosition(), this.getBlock(), 1, 0);
@@ -102,57 +108,77 @@
     }
 
     public void a(Entity entity) {
-        if (!this.world.isClientSide && !this.f()) {
+        if (!this.world.isClientSide && !this.e()) {
             this.g = 100;
             if (this.exitPortal == null && this.world.worldProvider instanceof WorldProviderTheEnd) {
-                this.k();
+                this.j();
             }
 
             if (this.exitPortal != null) {
-                BlockPosition blockposition = this.exactTeleport ? this.exitPortal : this.j();
+                BlockPosition blockposition = this.exactTeleport ? this.exitPortal : this.i();
+
+                // CraftBukkit start - Fire PlayerTeleportEvent
+                if (entity instanceof EntityPlayer) {
+                    org.bukkit.craftbukkit.entity.CraftPlayer player = (CraftPlayer) entity.getBukkitEntity();
+                    org.bukkit.Location location = new Location(world.getWorld(), (double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.5D, (double) blockposition.getZ() + 0.5D);
+                    location.setPitch(player.getLocation().getPitch());
+                    location.setYaw(player.getLocation().getYaw());
+
+                    PlayerTeleportEvent teleEvent = new PlayerTeleportEvent(player, player.getLocation(), location, PlayerTeleportEvent.TeleportCause.END_GATEWAY);
+                    Bukkit.getPluginManager().callEvent(teleEvent);
+                    if (teleEvent.isCancelled()) {
+                        return;
+                    }
+
+                    ((EntityPlayer) entity).playerConnection.teleport(teleEvent.getTo());
+                    this.i();
+                    return;
+
+                }
+                // CraftBukkit end
 
                 entity.enderTeleportTo((double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.5D, (double) blockposition.getZ() + 0.5D);
             }
 
-            this.h();
+            this.f();
         }
     }
 
-    private BlockPosition j() {
+    private BlockPosition i() {
         BlockPosition blockposition = a(this.world, this.exitPortal, 5, false);
 
-        TileEntityEndGateway.a.debug("Best exit position for portal at {} is {}", this.exitPortal, blockposition);
+        TileEntityEndGateway.a.debug("Best exit position for portal at {} is {}", new Object[] { this.exitPortal, blockposition});
         return blockposition.up();
     }
 
-    private void k() {
+    private void j() {
         Vec3D vec3d = (new Vec3D((double) this.getPosition().getX(), 0.0D, (double) this.getPosition().getZ())).a();
         Vec3D vec3d1 = vec3d.a(1024.0D);
 
         int i;
 
         for (i = 16; a(this.world, vec3d1).g() > 0 && i-- > 0; vec3d1 = vec3d1.e(vec3d.a(-16.0D))) {
-            TileEntityEndGateway.a.debug("Skipping backwards past nonempty chunk at {}", vec3d1);
+            TileEntityEndGateway.a.debug("Skipping backwards past nonempty chunk at {}", new Object[] { vec3d1});
         }
 
         for (i = 16; a(this.world, vec3d1).g() == 0 && i-- > 0; vec3d1 = vec3d1.e(vec3d.a(16.0D))) {
-            TileEntityEndGateway.a.debug("Skipping forward past empty chunk at {}", vec3d1);
+            TileEntityEndGateway.a.debug("Skipping forward past empty chunk at {}", new Object[] { vec3d1});
         }
 
-        TileEntityEndGateway.a.debug("Found chunk at {}", vec3d1);
+        TileEntityEndGateway.a.debug("Found chunk at {}", new Object[] { vec3d1});
         Chunk chunk = a(this.world, vec3d1);
 
         this.exitPortal = a(chunk);
         if (this.exitPortal == null) {
             this.exitPortal = new BlockPosition(vec3d1.x + 0.5D, 75.0D, vec3d1.z + 0.5D);
-            TileEntityEndGateway.a.debug("Failed to find suitable block, settling on {}", this.exitPortal);
+            TileEntityEndGateway.a.debug("Failed to find suitable block, settling on {}", new Object[] { this.exitPortal});
             (new WorldGenEndIsland()).generate(this.world, new Random(this.exitPortal.asLong()), this.exitPortal);
         } else {
-            TileEntityEndGateway.a.debug("Found block at {}", this.exitPortal);
+            TileEntityEndGateway.a.debug("Found block at {}", new Object[] { this.exitPortal});
         }
 
         this.exitPortal = a(this.world, this.exitPortal, 16, true);
-        TileEntityEndGateway.a.debug("Creating portal at {}", this.exitPortal);
+        TileEntityEndGateway.a.debug("Creating portal at {}", new Object[] { this.exitPortal});
         this.exitPortal = this.exitPortal.up(10);
         this.c(this.exitPortal);
         this.update();
@@ -168,7 +194,7 @@
                         BlockPosition blockposition2 = new BlockPosition(blockposition.getX() + j, l, blockposition.getZ() + k);
                         IBlockData iblockdata = world.getType(blockposition2);
 
-                        if (iblockdata.k() && (flag || iblockdata.getBlock() != Blocks.BEDROCK)) {
+                        if (iblockdata.l() && (flag || iblockdata.getBlock() != Blocks.BEDROCK)) {
                             blockposition1 = blockposition2;
                             break;
                         }
@@ -197,7 +223,7 @@
             BlockPosition blockposition3 = (BlockPosition) iterator.next();
             IBlockData iblockdata = chunk.getBlockData(blockposition3);
 
-            if (iblockdata.getBlock() == Blocks.END_STONE && !chunk.getBlockData(blockposition3.up(1)).k() && !chunk.getBlockData(blockposition3.up(2)).k()) {
+            if (iblockdata.getBlock() == Blocks.END_STONE && !chunk.getBlockData(blockposition3.up(1)).l() && !chunk.getBlockData(blockposition3.up(2)).l()) {
                 double d1 = blockposition3.g(0.0D, 0.0D, 0.0D);
 
                 if (blockposition2 == null || d1 < d0) {
@@ -220,7 +246,7 @@
             tileentityendgateway.exitPortal = new BlockPosition(this.getPosition());
             tileentityendgateway.update();
         } else {
-            TileEntityEndGateway.a.warn("Couldn\'t save exit portal at {}", blockposition);
+            TileEntityEndGateway.a.warn("Couldn\'t save exit portal at {}", new Object[] { blockposition});
         }
 
     }
