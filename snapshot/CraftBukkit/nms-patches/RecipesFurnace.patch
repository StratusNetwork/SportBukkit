--- a/net/minecraft/server/RecipesFurnace.java
+++ b/net/minecraft/server/RecipesFurnace.java
@@ -8,8 +8,10 @@
 public class RecipesFurnace {
 
     private static final RecipesFurnace a = new RecipesFurnace();
-    public final Map<ItemStack, ItemStack> recipes = Maps.newHashMap();
+    public Map<ItemStack, ItemStack> recipes = Maps.newHashMap();
     private final Map<ItemStack, Float> experience = Maps.newHashMap();
+    public Map<ItemStack,ItemStack> customRecipes = Maps.newHashMap(); // CraftBukkit - add field
+    public Map<ItemStack,Float> customExperience = Maps.newHashMap(); // CraftBukkit - add field
 
     public static RecipesFurnace getInstance() {
         return RecipesFurnace.a;
@@ -76,24 +78,14 @@
         this.a((Item) Items.GOLDEN_LEGGINGS, new ItemStack(Items.GOLD_NUGGET), 0.1F);
         this.a((Item) Items.GOLDEN_BOOTS, new ItemStack(Items.GOLD_NUGGET), 0.1F);
         this.a(Items.GOLDEN_HORSE_ARMOR, new ItemStack(Items.GOLD_NUGGET), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.WHITE.getColorIndex()), new ItemStack(Blocks.dB), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.ORANGE.getColorIndex()), new ItemStack(Blocks.dC), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.MAGENTA.getColorIndex()), new ItemStack(Blocks.dD), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.LIGHT_BLUE.getColorIndex()), new ItemStack(Blocks.dE), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.YELLOW.getColorIndex()), new ItemStack(Blocks.dF), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.LIME.getColorIndex()), new ItemStack(Blocks.dG), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.PINK.getColorIndex()), new ItemStack(Blocks.dH), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.GRAY.getColorIndex()), new ItemStack(Blocks.dI), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.SILVER.getColorIndex()), new ItemStack(Blocks.dJ), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.CYAN.getColorIndex()), new ItemStack(Blocks.dK), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.PURPLE.getColorIndex()), new ItemStack(Blocks.dL), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.BLUE.getColorIndex()), new ItemStack(Blocks.dM), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.BROWN.getColorIndex()), new ItemStack(Blocks.dN), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.GREEN.getColorIndex()), new ItemStack(Blocks.dO), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.RED.getColorIndex()), new ItemStack(Blocks.dP), 0.1F);
-        this.a(new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, EnumColor.BLACK.getColorIndex()), new ItemStack(Blocks.dQ), 0.1F);
     }
 
+    // CraftBukkit start - add method
+    public void registerRecipe(ItemStack itemstack, ItemStack itemstack1, float f) {
+        this.customRecipes.put(itemstack, itemstack1);
+    }
+    // CraftBukkit end
+
     public void registerRecipe(Block block, ItemStack itemstack, float f) {
         this.a(Item.getItemOf(block), itemstack, f);
     }
@@ -108,13 +100,23 @@
     }
 
     public ItemStack getResult(ItemStack itemstack) {
-        Iterator iterator = this.recipes.entrySet().iterator();
+        // CraftBukkit start - initialize to customRecipes
+        boolean vanilla = false;
+        Iterator<Entry<ItemStack, ItemStack>> iterator = this.customRecipes.entrySet().iterator();
+        // CraftBukkit end
 
         Entry entry;
 
         do {
             if (!iterator.hasNext()) {
-                return ItemStack.a;
+                // CraftBukkit start - fall back to vanilla recipes
+                if (!vanilla && !this.recipes.isEmpty()) {
+                    iterator = this.recipes.entrySet().iterator();
+                    vanilla = true;
+                } else {
+                    return ItemStack.a;
+                }
+                // CraftBukkit end
             }
 
             entry = (Entry) iterator.next();
@@ -132,13 +134,23 @@
     }
 
     public float b(ItemStack itemstack) {
-        Iterator iterator = this.experience.entrySet().iterator();
+        // CraftBukkit start - initialize to customRecipes
+        boolean vanilla = false;
+        Iterator<Entry<ItemStack, Float>> iterator = this.customExperience.entrySet().iterator();
+        // CraftBukkit end
 
         Entry entry;
 
         do {
             if (!iterator.hasNext()) {
-                return 0.0F;
+                // CraftBukkit start - fall back to vanilla recipes
+                if (!vanilla && !this.experience.isEmpty()) {
+                    iterator = this.experience.entrySet().iterator();
+                    vanilla = true;
+                } else {
+                    return 0.0F;
+                }
+                // CraftBukkit end
             }
 
             entry = (Entry) iterator.next();
