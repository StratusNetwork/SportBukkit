--- a/net/minecraft/server/EntityWither.java
+++ b/net/minecraft/server/EntityWither.java
@@ -2,27 +2,34 @@
 
 import com.google.common.base.Predicate;
 import com.google.common.base.Predicates;
+import java.util.Iterator;
 import java.util.List;
 import javax.annotation.Nullable;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityRegainHealthEvent;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
+// CraftBukkit end
+
 public class EntityWither extends EntityMonster implements IRangedEntity {
 
     private static final DataWatcherObject<Integer> a = DataWatcher.a(EntityWither.class, DataWatcherRegistry.b);
     private static final DataWatcherObject<Integer> b = DataWatcher.a(EntityWither.class, DataWatcherRegistry.b);
     private static final DataWatcherObject<Integer> c = DataWatcher.a(EntityWither.class, DataWatcherRegistry.b);
-    private static final DataWatcherObject<Integer>[] bx = new DataWatcherObject[] { EntityWither.a, EntityWither.b, EntityWither.c};
-    private static final DataWatcherObject<Integer> by = DataWatcher.a(EntityWither.class, DataWatcherRegistry.b);
+    private static final DataWatcherObject<Integer>[] bw = new DataWatcherObject[] { EntityWither.a, EntityWither.b, EntityWither.c};
+    private static final DataWatcherObject<Integer> bx = DataWatcher.a(EntityWither.class, DataWatcherRegistry.b);
+    private final float[] by = new float[2];
     private final float[] bz = new float[2];
     private final float[] bA = new float[2];
     private final float[] bB = new float[2];
-    private final float[] bC = new float[2];
+    private final int[] bC = new int[2];
     private final int[] bD = new int[2];
-    private final int[] bE = new int[2];
-    private int bF;
-    private final BossBattleServer bG;
-    private static final Predicate<Entity> bH = new Predicate() {
+    private int bE;
+    private final BossBattleServer bF;
+    private static final Predicate<Entity> bG = new Predicate() {
         public boolean a(@Nullable Entity entity) {
-            return entity instanceof EntityLiving && ((EntityLiving) entity).getMonsterType() != EnumMonsterType.UNDEAD && ((EntityLiving) entity).cQ();
+            return entity instanceof EntityLiving && ((EntityLiving) entity).getMonsterType() != EnumMonsterType.UNDEAD && ((EntityLiving) entity).cK();
         }
 
         public boolean apply(@Nullable Object object) {
@@ -32,7 +39,7 @@
 
     public EntityWither(World world) {
         super(world);
-        this.bG = (BossBattleServer) (new BossBattleServer(this.getScoreboardDisplayName(), BossBattle.BarColor.PURPLE, BossBattle.BarStyle.PROGRESS)).setDarkenSky(true);
+        this.bF = (BossBattleServer) (new BossBattleServer(this.getScoreboardDisplayName(), BossBattle.BarColor.PURPLE, BossBattle.BarStyle.PROGRESS)).setDarkenSky(true);
         this.setHealth(this.getMaxHealth());
         this.setSize(0.9F, 3.5F);
         this.fireProof = true;
@@ -48,7 +55,7 @@
         this.goalSelector.a(6, new PathfinderGoalLookAtPlayer(this, EntityHuman.class, 8.0F));
         this.goalSelector.a(7, new PathfinderGoalRandomLookaround(this));
         this.targetSelector.a(1, new PathfinderGoalHurtByTarget(this, false, new Class[0]));
-        this.targetSelector.a(2, new PathfinderGoalNearestAttackableTarget(this, EntityInsentient.class, 0, false, false, EntityWither.bH));
+        this.targetSelector.a(2, new PathfinderGoalNearestAttackableTarget(this, EntityInsentient.class, 0, false, false, EntityWither.bG));
     }
 
     protected void i() {
@@ -56,7 +63,7 @@
         this.datawatcher.register(EntityWither.a, Integer.valueOf(0));
         this.datawatcher.register(EntityWither.b, Integer.valueOf(0));
         this.datawatcher.register(EntityWither.c, Integer.valueOf(0));
-        this.datawatcher.register(EntityWither.by, Integer.valueOf(0));
+        this.datawatcher.register(EntityWither.bx, Integer.valueOf(0));
     }
 
     public static void a(DataConverterManager dataconvertermanager) {
@@ -65,33 +72,33 @@
 
     public void b(NBTTagCompound nbttagcompound) {
         super.b(nbttagcompound);
-        nbttagcompound.setInt("Invul", this.dk());
+        nbttagcompound.setInt("Invul", this.dh());
     }
 
     public void a(NBTTagCompound nbttagcompound) {
         super.a(nbttagcompound);
         this.g(nbttagcompound.getInt("Invul"));
         if (this.hasCustomName()) {
-            this.bG.a(this.getScoreboardDisplayName());
+            this.bF.a(this.getScoreboardDisplayName());
         }
 
     }
 
     public void setCustomName(String s) {
         super.setCustomName(s);
-        this.bG.a(this.getScoreboardDisplayName());
+        this.bF.a(this.getScoreboardDisplayName());
     }
 
-    protected SoundEffect F() {
-        return SoundEffects.iz;
+    protected SoundEffect G() {
+        return SoundEffects.hy;
     }
 
-    protected SoundEffect d(DamageSource damagesource) {
-        return SoundEffects.iC;
+    protected SoundEffect bW() {
+        return SoundEffects.hB;
     }
 
-    protected SoundEffect cd() {
-        return SoundEffects.iB;
+    protected SoundEffect bX() {
+        return SoundEffects.hA;
     }
 
     public void n() {
@@ -104,7 +111,7 @@
             Entity entity = this.world.getEntity(this.m(0));
 
             if (entity != null) {
-                if (this.locY < entity.locY || !this.dl() && this.locY < entity.locY + 5.0D) {
+                if (this.locY < entity.locY || !this.di() && this.locY < entity.locY + 5.0D) {
                     if (this.motY < 0.0D) {
                         this.motY = 0.0D;
                     }
@@ -133,8 +140,8 @@
         int i;
 
         for (i = 0; i < 2; ++i) {
-            this.bC[i] = this.bA[i];
             this.bB[i] = this.bz[i];
+            this.bA[i] = this.by[i];
         }
 
         int j;
@@ -158,14 +165,14 @@
                 float f = (float) (MathHelper.c(d6, d4) * 57.2957763671875D) - 90.0F;
                 float f1 = (float) (-(MathHelper.c(d5, d7) * 57.2957763671875D));
 
-                this.bz[i] = this.b(this.bz[i], f1, 40.0F);
-                this.bA[i] = this.b(this.bA[i], f, 10.0F);
+                this.by[i] = this.b(this.by[i], f1, 40.0F);
+                this.bz[i] = this.b(this.bz[i], f, 10.0F);
             } else {
-                this.bA[i] = this.b(this.bA[i], this.aN, 10.0F);
+                this.bz[i] = this.b(this.bz[i], this.aN, 10.0F);
             }
         }
 
-        boolean flag = this.dl();
+        boolean flag = this.di();
 
         for (j = 0; j < 3; ++j) {
             double d8 = this.n(j);
@@ -178,7 +185,7 @@
             }
         }
 
-        if (this.dk() > 0) {
+        if (this.dh() > 0) {
             for (j = 0; j < 3; ++j) {
                 this.world.addParticle(EnumParticle.SPELL_MOB, this.locX + this.random.nextGaussian(), this.locY + (double) (this.random.nextFloat() * 3.3F), this.locZ + this.random.nextGaussian(), 0.699999988079071D, 0.699999988079071D, 0.8999999761581421D, new int[0]);
             }
@@ -189,16 +196,41 @@
     protected void M() {
         int i;
 
-        if (this.dk() > 0) {
-            i = this.dk() - 1;
+        if (this.dh() > 0) {
+            i = this.dh() - 1;
             if (i <= 0) {
-                this.world.createExplosion(this, this.locX, this.locY + (double) this.getHeadHeight(), this.locZ, 7.0F, false, this.world.getGameRules().getBoolean("mobGriefing"));
-                this.world.a(1023, new BlockPosition(this), 0);
+                // CraftBukkit start
+                // this.world.createExplosion(this, this.locX, this.locY + (double) this.getHeadHeight(), this.locZ, 7.0F, false, this.world.getGameRules().getBoolean("mobGriefing"));
+                ExplosionPrimeEvent event = new ExplosionPrimeEvent(this.getBukkitEntity(), 7.0F, false);
+                this.world.getServer().getPluginManager().callEvent(event);
+
+                if (!event.isCancelled()) {
+                    this.world.createExplosion(this, this.locX, this.locY + (double) this.getHeadHeight(), this.locZ, event.getRadius(), event.getFire(), this.world.getGameRules().getBoolean("mobGriefing"));
+                }
+                // CraftBukkit end
+
+                // CraftBukkit start - Use relative location for far away sounds
+                // this.world.a(1023, new BlockPosition(this), 0);
+                int viewDistance = ((WorldServer) this.world).getServer().getViewDistance() * 16;
+                for (EntityPlayer player : (List<EntityPlayer>) MinecraftServer.getServer().getPlayerList().players) {
+                    double deltaX = this.locX - player.locX;
+                    double deltaZ = this.locZ - player.locZ;
+                    double distanceSquared = deltaX * deltaX + deltaZ * deltaZ;
+                    if (distanceSquared > viewDistance * viewDistance) {
+                        double deltaLength = Math.sqrt(distanceSquared);
+                        double relativeX = player.locX + (deltaX / deltaLength) * viewDistance;
+                        double relativeZ = player.locZ + (deltaZ / deltaLength) * viewDistance;
+                        player.playerConnection.sendPacket(new PacketPlayOutWorldEvent(1023, new BlockPosition((int) relativeX, (int) this.locY, (int) relativeZ), 0, true));
+                    } else {
+                        player.playerConnection.sendPacket(new PacketPlayOutWorldEvent(1023, new BlockPosition((int) this.locX, (int) this.locY, (int) this.locZ), 0, true));
+                    }
+                }
+                // CraftBukkit end
             }
 
             this.g(i);
             if (this.ticksLived % 10 == 0) {
-                this.heal(10.0F);
+                this.heal(10.0F, EntityRegainHealthEvent.RegainReason.WITHER_SPAWN); // CraftBukkit
             }
 
         } else {
@@ -207,13 +239,13 @@
             int j;
 
             for (i = 1; i < 3; ++i) {
-                if (this.ticksLived >= this.bD[i - 1]) {
-                    this.bD[i - 1] = this.ticksLived + 10 + this.random.nextInt(10);
+                if (this.ticksLived >= this.bC[i - 1]) {
+                    this.bC[i - 1] = this.ticksLived + 10 + this.random.nextInt(10);
                     if (this.world.getDifficulty() == EnumDifficulty.NORMAL || this.world.getDifficulty() == EnumDifficulty.HARD) {
                         int k = i - 1;
-                        int l = this.bE[i - 1];
+                        int l = this.bD[i - 1];
 
-                        this.bE[k] = this.bE[i - 1] + 1;
+                        this.bD[k] = this.bD[i - 1] + 1;
                         if (l > 15) {
                             float f = 10.0F;
                             float f1 = 5.0F;
@@ -222,7 +254,7 @@
                             double d2 = MathHelper.a(this.random, this.locZ - 10.0D, this.locZ + 10.0D);
 
                             this.a(i + 1, d0, d1, d2, true);
-                            this.bE[i - 1] = 0;
+                            this.bD[i - 1] = 0;
                         }
                     }
 
@@ -235,14 +267,14 @@
                                 this.a(i, 0);
                             } else {
                                 this.a(i + 1, (EntityLiving) entity);
-                                this.bD[i - 1] = this.ticksLived + 40 + this.random.nextInt(20);
-                                this.bE[i - 1] = 0;
+                                this.bC[i - 1] = this.ticksLived + 40 + this.random.nextInt(20);
+                                this.bD[i - 1] = 0;
                             }
                         } else {
                             this.a(i, 0);
                         }
                     } else {
-                        List list = this.world.a(EntityLiving.class, this.getBoundingBox().grow(20.0D, 8.0D, 20.0D), Predicates.and(EntityWither.bH, IEntitySelector.e));
+                        List list = this.world.a(EntityLiving.class, this.getBoundingBox().grow(20.0D, 8.0D, 20.0D), Predicates.and(EntityWither.bG, IEntitySelector.e));
 
                         for (int i1 = 0; i1 < 10 && !list.isEmpty(); ++i1) {
                             EntityLiving entityliving = (EntityLiving) list.get(this.random.nextInt(list.size()));
@@ -270,9 +302,9 @@
                 this.a(0, 0);
             }
 
-            if (this.bF > 0) {
-                --this.bF;
-                if (this.bF == 0 && this.world.getGameRules().getBoolean("mobGriefing")) {
+            if (this.bE > 0) {
+                --this.bE;
+                if (this.bE == 0 && this.world.getGameRules().getBoolean("mobGriefing")) {
                     i = MathHelper.floor(this.locY);
                     j = MathHelper.floor(this.locX);
                     int j1 = MathHelper.floor(this.locZ);
@@ -289,6 +321,11 @@
                                 Block block = iblockdata.getBlock();
 
                                 if (iblockdata.getMaterial() != Material.AIR && a(block)) {
+                                    // CraftBukkit start
+                                    if (CraftEventFactory.callEntityChangeBlockEvent(this, blockposition, Blocks.AIR, 0).isCancelled()) {
+                                        continue;
+                                    }
+                                    // CraftBukkit end
                                     flag = this.world.setAir(blockposition, true) || flag;
                                 }
                             }
@@ -302,32 +339,32 @@
             }
 
             if (this.ticksLived % 20 == 0) {
-                this.heal(1.0F);
+                this.heal(1.0F, EntityRegainHealthEvent.RegainReason.REGEN); // CraftBukkit
             }
 
-            this.bG.setProgress(this.getHealth() / this.getMaxHealth());
+            this.bF.setProgress(this.getHealth() / this.getMaxHealth());
         }
     }
 
     public static boolean a(Block block) {
-        return block != Blocks.BEDROCK && block != Blocks.END_PORTAL && block != Blocks.END_PORTAL_FRAME && block != Blocks.COMMAND_BLOCK && block != Blocks.dc && block != Blocks.dd && block != Blocks.BARRIER && block != Blocks.STRUCTURE_BLOCK && block != Blocks.dj && block != Blocks.PISTON_EXTENSION && block != Blocks.END_GATEWAY;
+        return block != Blocks.BEDROCK && block != Blocks.END_PORTAL && block != Blocks.END_PORTAL_FRAME && block != Blocks.COMMAND_BLOCK && block != Blocks.dc && block != Blocks.dd && block != Blocks.BARRIER && block != Blocks.STRUCTURE_BLOCK && block != Blocks.dj;
     }
 
-    public void p() {
+    public void o() {
         this.g(220);
         this.setHealth(this.getMaxHealth() / 3.0F);
     }
 
-    public void aY() {}
+    public void aS() {}
 
     public void b(EntityPlayer entityplayer) {
         super.b(entityplayer);
-        this.bG.addPlayer(entityplayer);
+        this.bF.addPlayer(entityplayer);
     }
 
     public void c(EntityPlayer entityplayer) {
         super.c(entityplayer);
-        this.bG.removePlayer(entityplayer);
+        this.bF.removePlayer(entityplayer);
     }
 
     private double n(int i) {
@@ -402,12 +439,12 @@
         if (this.isInvulnerable(damagesource)) {
             return false;
         } else if (damagesource != DamageSource.DROWN && !(damagesource.getEntity() instanceof EntityWither)) {
-            if (this.dk() > 0 && damagesource != DamageSource.OUT_OF_WORLD) {
+            if (this.dh() > 0 && damagesource != DamageSource.OUT_OF_WORLD) {
                 return false;
             } else {
                 Entity entity;
 
-                if (this.dl()) {
+                if (this.di()) {
                     entity = damagesource.i();
                     if (entity instanceof EntityArrow) {
                         return false;
@@ -418,12 +455,12 @@
                 if (entity != null && !(entity instanceof EntityHuman) && entity instanceof EntityLiving && ((EntityLiving) entity).getMonsterType() == this.getMonsterType()) {
                     return false;
                 } else {
-                    if (this.bF <= 0) {
-                        this.bF = 20;
+                    if (this.bE <= 0) {
+                        this.bE = 20;
                     }
 
-                    for (int i = 0; i < this.bE.length; ++i) {
-                        this.bE[i] += 3;
+                    for (int i = 0; i < this.bD.length; ++i) {
+                        this.bD[i] += 3;
                     }
 
                     return super.damageEntity(damagesource, f);
@@ -441,6 +478,16 @@
             entityitem.v();
         }
 
+        if (!this.world.isClientSide) {
+            Iterator iterator = this.world.a(EntityHuman.class, this.getBoundingBox().grow(50.0D, 100.0D, 50.0D)).iterator();
+
+            while (iterator.hasNext()) {
+                EntityHuman entityhuman = (EntityHuman) iterator.next();
+
+                entityhuman.b((Statistic) AchievementList.J);
+            }
+        }
+
     }
 
     protected void L() {
@@ -456,26 +503,26 @@
         this.getAttributeInstance(GenericAttributes.maxHealth).setValue(300.0D);
         this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED).setValue(0.6000000238418579D);
         this.getAttributeInstance(GenericAttributes.FOLLOW_RANGE).setValue(40.0D);
-        this.getAttributeInstance(GenericAttributes.h).setValue(4.0D);
+        this.getAttributeInstance(GenericAttributes.g).setValue(4.0D);
     }
 
-    public int dk() {
-        return ((Integer) this.datawatcher.get(EntityWither.by)).intValue();
+    public int dh() {
+        return ((Integer) this.datawatcher.get(EntityWither.bx)).intValue();
     }
 
     public void g(int i) {
-        this.datawatcher.set(EntityWither.by, Integer.valueOf(i));
+        this.datawatcher.set(EntityWither.bx, Integer.valueOf(i));
     }
 
     public int m(int i) {
-        return ((Integer) this.datawatcher.get(EntityWither.bx[i])).intValue();
+        return ((Integer) this.datawatcher.get(EntityWither.bw[i])).intValue();
     }
 
     public void a(int i, int j) {
-        this.datawatcher.set(EntityWither.bx[i], Integer.valueOf(j));
+        this.datawatcher.set(EntityWither.bw[i], Integer.valueOf(j));
     }
 
-    public boolean dl() {
+    public boolean di() {
         return this.getHealth() <= this.getMaxHealth() / 2.0F;
     }
 
@@ -487,12 +534,10 @@
         return false;
     }
 
-    public boolean bd() {
+    public boolean aX() {
         return false;
     }
 
-    public void p(boolean flag) {}
-
     class a extends PathfinderGoal {
 
         public a() {
@@ -500,7 +545,7 @@
         }
 
         public boolean a() {
-            return EntityWither.this.dk() > 0;
+            return EntityWither.this.dh() > 0;
         }
     }
 }
