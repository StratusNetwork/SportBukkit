--- a/net/minecraft/server/BlockShulkerBox.java
+++ b/net/minecraft/server/BlockShulkerBox.java
@@ -3,24 +3,25 @@
 public class BlockShulkerBox extends BlockTileEntity {
 
     public static final BlockStateEnum<EnumDirection> a = BlockStateDirection.of("facing");
-    public final EnumColor color;
+    public final EnumColor b; // PAIL: public, rename
 
     public BlockShulkerBox(EnumColor enumcolor) {
-        super(Material.STONE, MaterialMapColor.c);
-        this.color = enumcolor;
+        super(Material.STONE, MaterialMapColor.b);
+        proto(307); // SportBukkit
+        this.b = enumcolor;
         this.a(CreativeModeTab.c);
-        this.w(this.blockStateList.getBlockData().set(BlockShulkerBox.a, EnumDirection.UP));
+        this.y(this.blockStateList.getBlockData().set(BlockShulkerBox.a, EnumDirection.UP));
     }
 
     public TileEntity a(World world, int i) {
-        return new TileEntityShulkerBox(this.color);
+        return new TileEntityShulkerBox(this.b);
     }
 
     public boolean b(IBlockData iblockdata) {
         return false;
     }
 
-    public boolean t(IBlockData iblockdata) {
+    public boolean u(IBlockData iblockdata) {
         return true;
     }
 
@@ -83,23 +84,45 @@
     }
 
     public void a(World world, BlockPosition blockposition, IBlockData iblockdata, EntityHuman entityhuman) {
-        if (world.getTileEntity(blockposition) instanceof TileEntityShulkerBox) {
-            TileEntityShulkerBox tileentityshulkerbox = (TileEntityShulkerBox) world.getTileEntity(blockposition);
-
-            tileentityshulkerbox.a(entityhuman.abilities.canInstantlyBuild);
-            tileentityshulkerbox.d(entityhuman);
-        }
+        TileEntityShulkerBox tileentityshulkerbox = (TileEntityShulkerBox) world.getTileEntity(blockposition);
 
+        tileentityshulkerbox.a(entityhuman.abilities.canInstantlyBuild);
+        tileentityshulkerbox.d(entityhuman);
     }
 
-    public void dropNaturally(World world, BlockPosition blockposition, IBlockData iblockdata, float f, int i) {}
+    // CraftBukkit start - override to prevent duplication when dropping
+    public void dropNaturally(World world, BlockPosition blockposition, IBlockData iblockdata, float f, int i) {
+        TileEntity tileentity = world.getTileEntity(blockposition);
+
+        if (tileentity instanceof TileEntityShulkerBox) {
+            TileEntityShulkerBox tileentityshulkerbox = (TileEntityShulkerBox) tileentity;
+
+            if (!tileentityshulkerbox.r() && tileentityshulkerbox.F()) {
+                ItemStack itemstack = new ItemStack(Item.getItemOf(this));
+                NBTTagCompound nbttagcompound = new NBTTagCompound();
+                NBTTagCompound nbttagcompound1 = new NBTTagCompound();
+
+                nbttagcompound.set("BlockEntityTag", ((TileEntityShulkerBox) tileentity).f(nbttagcompound1));
+                itemstack.setTag(nbttagcompound);
+                if (tileentityshulkerbox.hasCustomName()) {
+                    itemstack.g(tileentityshulkerbox.getName());
+                    tileentityshulkerbox.a("");
+                }
+
+                a(world, blockposition, itemstack);
+            }
+
+            world.updateAdjacentComparators(blockposition, iblockdata.getBlock());
+        }
+    }
+    // CraftBukkit end
 
     public void postPlace(World world, BlockPosition blockposition, IBlockData iblockdata, EntityLiving entityliving, ItemStack itemstack) {
         if (itemstack.hasName()) {
             TileEntity tileentity = world.getTileEntity(blockposition);
 
             if (tileentity instanceof TileEntityShulkerBox) {
-                ((TileEntityShulkerBox) tileentity).setCustomName(itemstack.getName());
+                ((TileEntityShulkerBox) tileentity).a(itemstack.getName());
             }
         }
 
@@ -108,7 +131,7 @@
     public void remove(World world, BlockPosition blockposition, IBlockData iblockdata) {
         TileEntity tileentity = world.getTileEntity(blockposition);
 
-        if (tileentity instanceof TileEntityShulkerBox) {
+        if (false && tileentity instanceof TileEntityShulkerBox) { // CraftBukkit - moved up
             TileEntityShulkerBox tileentityshulkerbox = (TileEntityShulkerBox) tileentity;
 
             if (!tileentityshulkerbox.r() && tileentityshulkerbox.F()) {
@@ -120,7 +143,7 @@
                 itemstack.setTag(nbttagcompound);
                 if (tileentityshulkerbox.hasCustomName()) {
                     itemstack.g(tileentityshulkerbox.getName());
-                    tileentityshulkerbox.setCustomName("");
+                    tileentityshulkerbox.a("");
                 }
 
                 a(world, blockposition, itemstack);
@@ -226,12 +249,4 @@
     public IBlockData a(IBlockData iblockdata, EnumBlockMirror enumblockmirror) {
         return iblockdata.a(enumblockmirror.a((EnumDirection) iblockdata.get(BlockShulkerBox.a)));
     }
-
-    public EnumBlockFaceShape a(IBlockAccess iblockaccess, IBlockData iblockdata, BlockPosition blockposition, EnumDirection enumdirection) {
-        iblockdata = this.updateState(iblockdata, iblockaccess, blockposition);
-        EnumDirection enumdirection1 = (EnumDirection) iblockdata.get(BlockShulkerBox.a);
-        TileEntityShulkerBox.AnimationPhase tileentityshulkerbox_animationphase = ((TileEntityShulkerBox) iblockaccess.getTileEntity(blockposition)).p();
-
-        return tileentityshulkerbox_animationphase != TileEntityShulkerBox.AnimationPhase.CLOSED && (tileentityshulkerbox_animationphase != TileEntityShulkerBox.AnimationPhase.OPENED || enumdirection1 != enumdirection.opposite() && enumdirection1 != enumdirection) ? EnumBlockFaceShape.UNDEFINED : EnumBlockFaceShape.SOLID;
-    }
 }
