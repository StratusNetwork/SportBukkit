--- a/net/minecraft/server/EntityVillager.java
+++ b/net/minecraft/server/EntityVillager.java
@@ -6,30 +6,37 @@
 import javax.annotation.Nullable;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+// CraftBukkit start
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.entity.CraftVillager;
+import org.bukkit.craftbukkit.inventory.CraftMerchantRecipe;
+import org.bukkit.entity.Villager;
+import org.bukkit.event.entity.VillagerAcquireTradeEvent;
+import org.bukkit.event.entity.VillagerReplenishTradeEvent;
+// CraftBukkit end
 
 public class EntityVillager extends EntityAgeable implements NPC, IMerchant {
 
-    private static final Logger by = LogManager.getLogger();
-    private static final DataWatcherObject<Integer> bz = DataWatcher.a(EntityVillager.class, DataWatcherRegistry.b);
+    private static final Logger bx = LogManager.getLogger();
+    private static final DataWatcherObject<Integer> by = DataWatcher.a(EntityVillager.class, DataWatcherRegistry.b);
     private int profession;
+    private boolean bA;
     private boolean bB;
-    private boolean bC;
     Village village;
-    @Nullable
     private EntityHuman tradingPlayer;
     @Nullable
     private MerchantRecipeList trades;
-    private int bF;
+    private int bE;
+    private boolean bF;
     private boolean bG;
-    private boolean bH;
     public int riches;
-    private String bJ;
+    private String bI;
+    private int bJ;
     private int bK;
-    private int bL;
+    private boolean bL;
     private boolean bM;
-    private boolean bN;
     public final InventorySubcontainer inventory;
-    private static final EntityVillager.IMerchantRecipeOption[][][][] bP = new EntityVillager.IMerchantRecipeOption[][][][] { { { { new EntityVillager.MerchantRecipeOptionBuy(Items.WHEAT, new EntityVillager.MerchantOptionRandomRange(18, 22)), new EntityVillager.MerchantRecipeOptionBuy(Items.POTATO, new EntityVillager.MerchantOptionRandomRange(15, 19)), new EntityVillager.MerchantRecipeOptionBuy(Items.CARROT, new EntityVillager.MerchantOptionRandomRange(15, 19)), new EntityVillager.MerchantRecipeOptionSell(Items.BREAD, new EntityVillager.MerchantOptionRandomRange(-4, -2))}, { new EntityVillager.MerchantRecipeOptionBuy(Item.getItemOf(Blocks.PUMPKIN), new EntityVillager.MerchantOptionRandomRange(8, 13)), new EntityVillager.MerchantRecipeOptionSell(Items.PUMPKIN_PIE, new EntityVillager.MerchantOptionRandomRange(-3, -2))}, { new EntityVillager.MerchantRecipeOptionBuy(Item.getItemOf(Blocks.MELON_BLOCK), new EntityVillager.MerchantOptionRandomRange(7, 12)), new EntityVillager.MerchantRecipeOptionSell(Items.APPLE, new EntityVillager.MerchantOptionRandomRange(-7, -5))}, { new EntityVillager.MerchantRecipeOptionSell(Items.COOKIE, new EntityVillager.MerchantOptionRandomRange(-10, -6)), new EntityVillager.MerchantRecipeOptionSell(Items.CAKE, new EntityVillager.MerchantOptionRandomRange(1, 1))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.STRING, new EntityVillager.MerchantOptionRandomRange(15, 20)), new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionProcess(Items.FISH, new EntityVillager.MerchantOptionRandomRange(6, 6), Items.COOKED_FISH, new EntityVillager.MerchantOptionRandomRange(6, 6))}, { new EntityVillager.MerchantRecipeOptionEnchant(Items.FISHING_ROD, new EntityVillager.MerchantOptionRandomRange(7, 8))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Item.getItemOf(Blocks.WOOL), new EntityVillager.MerchantOptionRandomRange(16, 22)), new EntityVillager.MerchantRecipeOptionSell(Items.SHEARS, new EntityVillager.MerchantOptionRandomRange(3, 4))}, { new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL)), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 1), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 2), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 3), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 4), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 5), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 6), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 7), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 8), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 9), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 10), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 11), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 12), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 13), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 14), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 15), new EntityVillager.MerchantOptionRandomRange(1, 2))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.STRING, new EntityVillager.MerchantOptionRandomRange(15, 20)), new EntityVillager.MerchantRecipeOptionSell(Items.ARROW, new EntityVillager.MerchantOptionRandomRange(-12, -8))}, { new EntityVillager.MerchantRecipeOptionSell(Items.BOW, new EntityVillager.MerchantOptionRandomRange(2, 3)), new EntityVillager.MerchantRecipeOptionProcess(Item.getItemOf(Blocks.GRAVEL), new EntityVillager.MerchantOptionRandomRange(10, 10), Items.FLINT, new EntityVillager.MerchantOptionRandomRange(6, 10))}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.PAPER, new EntityVillager.MerchantOptionRandomRange(24, 36)), new EntityVillager.MerchantRecipeOptionBook()}, { new EntityVillager.MerchantRecipeOptionBuy(Items.BOOK, new EntityVillager.MerchantOptionRandomRange(8, 10)), new EntityVillager.MerchantRecipeOptionSell(Items.COMPASS, new EntityVillager.MerchantOptionRandomRange(10, 12)), new EntityVillager.MerchantRecipeOptionSell(Item.getItemOf(Blocks.BOOKSHELF), new EntityVillager.MerchantOptionRandomRange(3, 4))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.WRITTEN_BOOK, new EntityVillager.MerchantOptionRandomRange(2, 2)), new EntityVillager.MerchantRecipeOptionSell(Items.CLOCK, new EntityVillager.MerchantOptionRandomRange(10, 12)), new EntityVillager.MerchantRecipeOptionSell(Item.getItemOf(Blocks.GLASS), new EntityVillager.MerchantOptionRandomRange(-5, -3))}, { new EntityVillager.MerchantRecipeOptionBook()}, { new EntityVillager.MerchantRecipeOptionBook()}, { new EntityVillager.MerchantRecipeOptionSell(Items.NAME_TAG, new EntityVillager.MerchantOptionRandomRange(20, 22))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.PAPER, new EntityVillager.MerchantOptionRandomRange(24, 36))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.COMPASS, new EntityVillager.MerchantOptionRandomRange(1, 1))}, { new EntityVillager.MerchantRecipeOptionSell(Items.MAP, new EntityVillager.MerchantOptionRandomRange(7, 11))}, { new EntityVillager.h(new EntityVillager.MerchantOptionRandomRange(12, 20), "Monument", MapIcon.Type.MONUMENT), new EntityVillager.h(new EntityVillager.MerchantOptionRandomRange(16, 28), "Mansion", MapIcon.Type.MANSION)}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.ROTTEN_FLESH, new EntityVillager.MerchantOptionRandomRange(36, 40)), new EntityVillager.MerchantRecipeOptionBuy(Items.GOLD_INGOT, new EntityVillager.MerchantOptionRandomRange(8, 10))}, { new EntityVillager.MerchantRecipeOptionSell(Items.REDSTONE, new EntityVillager.MerchantOptionRandomRange(-4, -1)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Items.DYE, 1, EnumColor.BLUE.getInvColorIndex()), new EntityVillager.MerchantOptionRandomRange(-2, -1))}, { new EntityVillager.MerchantRecipeOptionSell(Items.ENDER_PEARL, new EntityVillager.MerchantOptionRandomRange(4, 7)), new EntityVillager.MerchantRecipeOptionSell(Item.getItemOf(Blocks.GLOWSTONE), new EntityVillager.MerchantOptionRandomRange(-3, -1))}, { new EntityVillager.MerchantRecipeOptionSell(Items.EXPERIENCE_BOTTLE, new EntityVillager.MerchantOptionRandomRange(3, 11))}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionSell(Items.IRON_HELMET, new EntityVillager.MerchantOptionRandomRange(4, 6))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.IRON_INGOT, new EntityVillager.MerchantOptionRandomRange(7, 9)), new EntityVillager.MerchantRecipeOptionSell(Items.IRON_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(10, 14))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.DIAMOND, new EntityVillager.MerchantOptionRandomRange(3, 4)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(16, 19))}, { new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_BOOTS, new EntityVillager.MerchantOptionRandomRange(5, 7)), new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_LEGGINGS, new EntityVillager.MerchantOptionRandomRange(9, 11)), new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_HELMET, new EntityVillager.MerchantOptionRandomRange(5, 7)), new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(11, 15))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionSell(Items.IRON_AXE, new EntityVillager.MerchantOptionRandomRange(6, 8))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.IRON_INGOT, new EntityVillager.MerchantOptionRandomRange(7, 9)), new EntityVillager.MerchantRecipeOptionEnchant(Items.IRON_SWORD, new EntityVillager.MerchantOptionRandomRange(9, 10))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.DIAMOND, new EntityVillager.MerchantOptionRandomRange(3, 4)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_SWORD, new EntityVillager.MerchantOptionRandomRange(12, 15)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_AXE, new EntityVillager.MerchantOptionRandomRange(9, 12))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionEnchant(Items.IRON_SHOVEL, new EntityVillager.MerchantOptionRandomRange(5, 7))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.IRON_INGOT, new EntityVillager.MerchantOptionRandomRange(7, 9)), new EntityVillager.MerchantRecipeOptionEnchant(Items.IRON_PICKAXE, new EntityVillager.MerchantOptionRandomRange(9, 11))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.DIAMOND, new EntityVillager.MerchantOptionRandomRange(3, 4)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_PICKAXE, new EntityVillager.MerchantOptionRandomRange(12, 15))}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.PORKCHOP, new EntityVillager.MerchantOptionRandomRange(14, 18)), new EntityVillager.MerchantRecipeOptionBuy(Items.CHICKEN, new EntityVillager.MerchantOptionRandomRange(14, 18))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionSell(Items.COOKED_PORKCHOP, new EntityVillager.MerchantOptionRandomRange(-7, -5)), new EntityVillager.MerchantRecipeOptionSell(Items.COOKED_CHICKEN, new EntityVillager.MerchantOptionRandomRange(-8, -6))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.LEATHER, new EntityVillager.MerchantOptionRandomRange(9, 12)), new EntityVillager.MerchantRecipeOptionSell(Items.LEATHER_LEGGINGS, new EntityVillager.MerchantOptionRandomRange(2, 4))}, { new EntityVillager.MerchantRecipeOptionEnchant(Items.LEATHER_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(7, 12))}, { new EntityVillager.MerchantRecipeOptionSell(Items.SADDLE, new EntityVillager.MerchantOptionRandomRange(8, 10))}}}, { new EntityVillager.IMerchantRecipeOption[0][]}};
+    private static final EntityVillager.IMerchantRecipeOption[][][][] bO = new EntityVillager.IMerchantRecipeOption[][][][] { { { { new EntityVillager.MerchantRecipeOptionBuy(Items.WHEAT, new EntityVillager.MerchantOptionRandomRange(18, 22)), new EntityVillager.MerchantRecipeOptionBuy(Items.POTATO, new EntityVillager.MerchantOptionRandomRange(15, 19)), new EntityVillager.MerchantRecipeOptionBuy(Items.CARROT, new EntityVillager.MerchantOptionRandomRange(15, 19)), new EntityVillager.MerchantRecipeOptionSell(Items.BREAD, new EntityVillager.MerchantOptionRandomRange(-4, -2))}, { new EntityVillager.MerchantRecipeOptionBuy(Item.getItemOf(Blocks.PUMPKIN), new EntityVillager.MerchantOptionRandomRange(8, 13)), new EntityVillager.MerchantRecipeOptionSell(Items.PUMPKIN_PIE, new EntityVillager.MerchantOptionRandomRange(-3, -2))}, { new EntityVillager.MerchantRecipeOptionBuy(Item.getItemOf(Blocks.MELON_BLOCK), new EntityVillager.MerchantOptionRandomRange(7, 12)), new EntityVillager.MerchantRecipeOptionSell(Items.APPLE, new EntityVillager.MerchantOptionRandomRange(-7, -5))}, { new EntityVillager.MerchantRecipeOptionSell(Items.COOKIE, new EntityVillager.MerchantOptionRandomRange(-10, -6)), new EntityVillager.MerchantRecipeOptionSell(Items.CAKE, new EntityVillager.MerchantOptionRandomRange(1, 1))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.STRING, new EntityVillager.MerchantOptionRandomRange(15, 20)), new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionProcess(Items.FISH, new EntityVillager.MerchantOptionRandomRange(6, 6), Items.COOKED_FISH, new EntityVillager.MerchantOptionRandomRange(6, 6))}, { new EntityVillager.MerchantRecipeOptionEnchant(Items.FISHING_ROD, new EntityVillager.MerchantOptionRandomRange(7, 8))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Item.getItemOf(Blocks.WOOL), new EntityVillager.MerchantOptionRandomRange(16, 22)), new EntityVillager.MerchantRecipeOptionSell(Items.SHEARS, new EntityVillager.MerchantOptionRandomRange(3, 4))}, { new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL)), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 1), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 2), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 3), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 4), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 5), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 6), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 7), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 8), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 9), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 10), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 11), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 12), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 13), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 14), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 15), new EntityVillager.MerchantOptionRandomRange(1, 2))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.STRING, new EntityVillager.MerchantOptionRandomRange(15, 20)), new EntityVillager.MerchantRecipeOptionSell(Items.ARROW, new EntityVillager.MerchantOptionRandomRange(-12, -8))}, { new EntityVillager.MerchantRecipeOptionSell(Items.BOW, new EntityVillager.MerchantOptionRandomRange(2, 3)), new EntityVillager.MerchantRecipeOptionProcess(Item.getItemOf(Blocks.GRAVEL), new EntityVillager.MerchantOptionRandomRange(10, 10), Items.FLINT, new EntityVillager.MerchantOptionRandomRange(6, 10))}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.PAPER, new EntityVillager.MerchantOptionRandomRange(24, 36)), new EntityVillager.MerchantRecipeOptionBook()}, { new EntityVillager.MerchantRecipeOptionBuy(Items.BOOK, new EntityVillager.MerchantOptionRandomRange(8, 10)), new EntityVillager.MerchantRecipeOptionSell(Items.COMPASS, new EntityVillager.MerchantOptionRandomRange(10, 12)), new EntityVillager.MerchantRecipeOptionSell(Item.getItemOf(Blocks.BOOKSHELF), new EntityVillager.MerchantOptionRandomRange(3, 4))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.WRITTEN_BOOK, new EntityVillager.MerchantOptionRandomRange(2, 2)), new EntityVillager.MerchantRecipeOptionSell(Items.CLOCK, new EntityVillager.MerchantOptionRandomRange(10, 12)), new EntityVillager.MerchantRecipeOptionSell(Item.getItemOf(Blocks.GLASS), new EntityVillager.MerchantOptionRandomRange(-5, -3))}, { new EntityVillager.MerchantRecipeOptionBook()}, { new EntityVillager.MerchantRecipeOptionBook()}, { new EntityVillager.MerchantRecipeOptionSell(Items.NAME_TAG, new EntityVillager.MerchantOptionRandomRange(20, 22))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.PAPER, new EntityVillager.MerchantOptionRandomRange(24, 36))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.COMPASS, new EntityVillager.MerchantOptionRandomRange(1, 1))}, { new EntityVillager.MerchantRecipeOptionSell(Items.MAP, new EntityVillager.MerchantOptionRandomRange(7, 11))}, { new EntityVillager.h(new EntityVillager.MerchantOptionRandomRange(12, 20), "Monument", MapIcon.Type.MONUMENT), new EntityVillager.h(new EntityVillager.MerchantOptionRandomRange(16, 28), "Mansion", MapIcon.Type.MANSION)}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.ROTTEN_FLESH, new EntityVillager.MerchantOptionRandomRange(36, 40)), new EntityVillager.MerchantRecipeOptionBuy(Items.GOLD_INGOT, new EntityVillager.MerchantOptionRandomRange(8, 10))}, { new EntityVillager.MerchantRecipeOptionSell(Items.REDSTONE, new EntityVillager.MerchantOptionRandomRange(-4, -1)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Items.DYE, 1, EnumColor.BLUE.getInvColorIndex()), new EntityVillager.MerchantOptionRandomRange(-2, -1))}, { new EntityVillager.MerchantRecipeOptionSell(Items.ENDER_PEARL, new EntityVillager.MerchantOptionRandomRange(4, 7)), new EntityVillager.MerchantRecipeOptionSell(Item.getItemOf(Blocks.GLOWSTONE), new EntityVillager.MerchantOptionRandomRange(-3, -1))}, { new EntityVillager.MerchantRecipeOptionSell(Items.EXPERIENCE_BOTTLE, new EntityVillager.MerchantOptionRandomRange(3, 11))}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionSell(Items.IRON_HELMET, new EntityVillager.MerchantOptionRandomRange(4, 6))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.IRON_INGOT, new EntityVillager.MerchantOptionRandomRange(7, 9)), new EntityVillager.MerchantRecipeOptionSell(Items.IRON_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(10, 14))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.DIAMOND, new EntityVillager.MerchantOptionRandomRange(3, 4)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(16, 19))}, { new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_BOOTS, new EntityVillager.MerchantOptionRandomRange(5, 7)), new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_LEGGINGS, new EntityVillager.MerchantOptionRandomRange(9, 11)), new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_HELMET, new EntityVillager.MerchantOptionRandomRange(5, 7)), new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(11, 15))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionSell(Items.IRON_AXE, new EntityVillager.MerchantOptionRandomRange(6, 8))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.IRON_INGOT, new EntityVillager.MerchantOptionRandomRange(7, 9)), new EntityVillager.MerchantRecipeOptionEnchant(Items.IRON_SWORD, new EntityVillager.MerchantOptionRandomRange(9, 10))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.DIAMOND, new EntityVillager.MerchantOptionRandomRange(3, 4)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_SWORD, new EntityVillager.MerchantOptionRandomRange(12, 15)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_AXE, new EntityVillager.MerchantOptionRandomRange(9, 12))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionEnchant(Items.IRON_SHOVEL, new EntityVillager.MerchantOptionRandomRange(5, 7))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.IRON_INGOT, new EntityVillager.MerchantOptionRandomRange(7, 9)), new EntityVillager.MerchantRecipeOptionEnchant(Items.IRON_PICKAXE, new EntityVillager.MerchantOptionRandomRange(9, 11))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.DIAMOND, new EntityVillager.MerchantOptionRandomRange(3, 4)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_PICKAXE, new EntityVillager.MerchantOptionRandomRange(12, 15))}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.PORKCHOP, new EntityVillager.MerchantOptionRandomRange(14, 18)), new EntityVillager.MerchantRecipeOptionBuy(Items.CHICKEN, new EntityVillager.MerchantOptionRandomRange(14, 18))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionSell(Items.COOKED_PORKCHOP, new EntityVillager.MerchantOptionRandomRange(-7, -5)), new EntityVillager.MerchantRecipeOptionSell(Items.COOKED_CHICKEN, new EntityVillager.MerchantOptionRandomRange(-8, -6))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.LEATHER, new EntityVillager.MerchantOptionRandomRange(9, 12)), new EntityVillager.MerchantRecipeOptionSell(Items.LEATHER_LEGGINGS, new EntityVillager.MerchantOptionRandomRange(2, 4))}, { new EntityVillager.MerchantRecipeOptionEnchant(Items.LEATHER_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(7, 12))}, { new EntityVillager.MerchantRecipeOptionSell(Items.SADDLE, new EntityVillager.MerchantOptionRandomRange(8, 10))}}}, { new EntityVillager.IMerchantRecipeOption[0][]}};
 
     public EntityVillager(World world) {
         this(world, 0);
@@ -37,7 +44,7 @@
 
     public EntityVillager(World world, int i) {
         super(world);
-        this.inventory = new InventorySubcontainer("Items", false, 8);
+        this.inventory = new InventorySubcontainer("Items", false, 8, (CraftVillager) this.getBukkitEntity()); // CraftBukkit add argument
         this.setProfession(i);
         this.setSize(0.6F, 1.95F);
         ((Navigation) this.getNavigation()).a(true);
@@ -64,9 +71,9 @@
         this.goalSelector.a(10, new PathfinderGoalLookAtPlayer(this, EntityInsentient.class, 8.0F));
     }
 
-    private void du() {
-        if (!this.bN) {
-            this.bN = true;
+    private void ds() {
+        if (!this.bM) {
+            this.bM = true;
             if (this.isBaby()) {
                 this.goalSelector.a(8, new PathfinderGoalPlay(this, 0.32D));
             } else if (this.getProfession() == 0) {
@@ -76,12 +83,12 @@
         }
     }
 
-    protected void p() {
+    protected void o() {
         if (this.getProfession() == 0) {
             this.goalSelector.a(8, new PathfinderGoalVillagerFarm(this, 0.6D));
         }
 
-        super.p();
+        super.o();
     }
 
     protected void initAttributes() {
@@ -93,41 +100,48 @@
         if (--this.profession <= 0) {
             BlockPosition blockposition = new BlockPosition(this);
 
-            this.world.ak().a(blockposition);
+            this.world.ai().a(blockposition);
             this.profession = 70 + this.random.nextInt(50);
-            this.village = this.world.ak().getClosestVillage(blockposition, 32);
+            this.village = this.world.ai().getClosestVillage(blockposition, 32);
             if (this.village == null) {
-                this.dg();
+                this.de();
             } else {
                 BlockPosition blockposition1 = this.village.a();
 
                 this.a(blockposition1, this.village.b());
-                if (this.bM) {
-                    this.bM = false;
+                if (this.bL) {
+                    this.bL = false;
                     this.village.b(5);
                 }
             }
         }
 
-        if (!this.dm() && this.bF > 0) {
-            --this.bF;
-            if (this.bF <= 0) {
-                if (this.bG) {
+        if (!this.dk() && this.bE > 0) {
+            --this.bE;
+            if (this.bE <= 0) {
+                if (this.bF) {
                     Iterator iterator = this.trades.iterator();
 
                     while (iterator.hasNext()) {
                         MerchantRecipe merchantrecipe = (MerchantRecipe) iterator.next();
 
                         if (merchantrecipe.h()) {
-                            merchantrecipe.a(this.random.nextInt(6) + this.random.nextInt(6) + 2);
+                            // CraftBukkit start
+                            int bonus = this.random.nextInt(6) + this.random.nextInt(6) + 2;
+                            VillagerReplenishTradeEvent event = new VillagerReplenishTradeEvent((Villager) this.getBukkitEntity(), merchantrecipe.asBukkit(), bonus);
+                            Bukkit.getPluginManager().callEvent(event);
+                            if (!event.isCancelled()) {
+                                merchantrecipe.a(event.getBonus());
+                            }
+                            // CraftBukkit end
                         }
                     }
 
-                    this.dv();
-                    this.bG = false;
-                    if (this.village != null && this.bJ != null) {
+                    this.dt();
+                    this.bF = false;
+                    if (this.village != null && this.bI != null) {
                         this.world.broadcastEntityEffect(this, (byte) 14);
-                        this.village.a(this.bJ, 1);
+                        this.village.a(this.bI, 1);
                     }
                 }
 
@@ -145,9 +159,9 @@
         if (flag) {
             itemstack.a(entityhuman, (EntityLiving) this, enumhand);
             return true;
-        } else if (!this.a(itemstack, this.getClass()) && this.isAlive() && !this.dm() && !this.isBaby()) {
+        } else if (!this.a(itemstack, this.getClass()) && this.isAlive() && !this.dk() && !this.isBaby()) {
             if (this.trades == null) {
-                this.dv();
+                this.dt();
             }
 
             if (enumhand == EnumHand.MAIN_HAND) {
@@ -169,7 +183,7 @@
 
     protected void i() {
         super.i();
-        this.datawatcher.register(EntityVillager.bz, Integer.valueOf(0));
+        this.datawatcher.register(EntityVillager.by, Integer.valueOf(0));
     }
 
     public static void a(DataConverterManager dataconvertermanager) {
@@ -203,9 +217,9 @@
         super.b(nbttagcompound);
         nbttagcompound.setInt("Profession", this.getProfession());
         nbttagcompound.setInt("Riches", this.riches);
-        nbttagcompound.setInt("Career", this.bK);
-        nbttagcompound.setInt("CareerLevel", this.bL);
-        nbttagcompound.setBoolean("Willing", this.bH);
+        nbttagcompound.setInt("Career", this.bJ);
+        nbttagcompound.setInt("CareerLevel", this.bK);
+        nbttagcompound.setBoolean("Willing", this.bG);
         if (this.trades != null) {
             nbttagcompound.set("Offers", this.trades.a());
         }
@@ -227,9 +241,9 @@
         super.a(nbttagcompound);
         this.setProfession(nbttagcompound.getInt("Profession"));
         this.riches = nbttagcompound.getInt("Riches");
-        this.bK = nbttagcompound.getInt("Career");
-        this.bL = nbttagcompound.getInt("CareerLevel");
-        this.bH = nbttagcompound.getBoolean("Willing");
+        this.bJ = nbttagcompound.getInt("Career");
+        this.bK = nbttagcompound.getInt("CareerLevel");
+        this.bG = nbttagcompound.getBoolean("Willing");
         if (nbttagcompound.hasKeyOfType("Offers", 10)) {
             NBTTagCompound nbttagcompound1 = nbttagcompound.getCompound("Offers");
 
@@ -247,23 +261,23 @@
         }
 
         this.m(true);
-        this.du();
+        this.ds();
     }
 
     protected boolean isTypeNotPersistent() {
         return false;
     }
 
-    protected SoundEffect F() {
-        return this.dm() ? SoundEffects.il : SoundEffects.ih;
+    protected SoundEffect G() {
+        return this.dk() ? SoundEffects.hk : SoundEffects.hg;
     }
 
-    protected SoundEffect d(DamageSource damagesource) {
-        return SoundEffects.ij;
+    protected SoundEffect bW() {
+        return SoundEffects.hi;
     }
 
-    protected SoundEffect cd() {
-        return SoundEffects.ii;
+    protected SoundEffect bX() {
+        return SoundEffects.hh;
     }
 
     @Nullable
@@ -272,27 +286,27 @@
     }
 
     public void setProfession(int i) {
-        this.datawatcher.set(EntityVillager.bz, Integer.valueOf(i));
+        this.datawatcher.set(EntityVillager.by, Integer.valueOf(i));
     }
 
     public int getProfession() {
-        return Math.max(((Integer) this.datawatcher.get(EntityVillager.bz)).intValue() % 6, 0);
+        return Math.max(((Integer) this.datawatcher.get(EntityVillager.by)).intValue() % 6, 0);
     }
 
-    public boolean dk() {
-        return this.bB;
+    public boolean di() {
+        return this.bA;
     }
 
     public void p(boolean flag) {
-        this.bB = flag;
+        this.bA = flag;
     }
 
     public void q(boolean flag) {
-        this.bC = flag;
+        this.bB = flag;
     }
 
-    public boolean dl() {
-        return this.bC;
+    public boolean dj() {
+        return this.bB;
     }
 
     public void a(@Nullable EntityLiving entityliving) {
@@ -337,21 +351,20 @@
         super.die(damagesource);
     }
 
-    public void setTradingPlayer(@Nullable EntityHuman entityhuman) {
+    public void setTradingPlayer(EntityHuman entityhuman) {
         this.tradingPlayer = entityhuman;
     }
 
-    @Nullable
     public EntityHuman getTrader() {
         return this.tradingPlayer;
     }
 
-    public boolean dm() {
+    public boolean dk() {
         return this.tradingPlayer != null;
     }
 
     public boolean r(boolean flag) {
-        if (!this.bH && flag && this.dp()) {
+        if (!this.bG && flag && this.dn()) {
             boolean flag1 = false;
 
             for (int i = 0; i < this.inventory.getSize(); ++i) {
@@ -369,33 +382,33 @@
 
                 if (flag1) {
                     this.world.broadcastEntityEffect(this, (byte) 18);
-                    this.bH = true;
+                    this.bG = true;
                     break;
                 }
             }
         }
 
-        return this.bH;
+        return this.bG;
     }
 
     public void s(boolean flag) {
-        this.bH = flag;
+        this.bG = flag;
     }
 
     public void a(MerchantRecipe merchantrecipe) {
-        merchantrecipe.increaseUses();
+        merchantrecipe.g();
         this.a_ = -this.C();
-        this.a(SoundEffects.im, this.co(), this.cp());
+        this.a(SoundEffects.hl, this.ci(), this.cj());
         int i = 3 + this.random.nextInt(4);
 
         if (merchantrecipe.e() == 1 || this.random.nextInt(5) == 0) {
-            this.bF = 40;
+            this.bE = 40;
+            this.bF = true;
             this.bG = true;
-            this.bH = true;
             if (this.tradingPlayer != null) {
-                this.bJ = this.tradingPlayer.getName();
+                this.bI = this.tradingPlayer.getName();
             } else {
-                this.bJ = null;
+                this.bI = null;
             }
 
             i += 5;
@@ -409,16 +422,12 @@
             this.world.addEntity(new EntityExperienceOrb(this.world, this.locX, this.locY + 0.5D, this.locZ, i));
         }
 
-        if (this.tradingPlayer instanceof EntityPlayer) {
-            CriterionTriggers.r.a((EntityPlayer) this.tradingPlayer, this, merchantrecipe.getBuyItem3());
-        }
-
     }
 
     public void a(ItemStack itemstack) {
         if (!this.world.isClientSide && this.a_ > -this.C() + 20) {
             this.a_ = -this.C();
-            this.a(itemstack.isEmpty() ? SoundEffects.ik : SoundEffects.im, this.co(), this.cp());
+            this.a(itemstack.isEmpty() ? SoundEffects.hj : SoundEffects.hl, this.ci(), this.cj());
         }
 
     }
@@ -426,28 +435,28 @@
     @Nullable
     public MerchantRecipeList getOffers(EntityHuman entityhuman) {
         if (this.trades == null) {
-            this.dv();
+            this.dt();
         }
 
         return this.trades;
     }
 
-    private void dv() {
-        EntityVillager.IMerchantRecipeOption[][][] aentityvillager_imerchantrecipeoption = EntityVillager.bP[this.getProfession()];
+    private void dt() {
+        EntityVillager.IMerchantRecipeOption[][][] aentityvillager_imerchantrecipeoption = EntityVillager.bO[this.getProfession()];
 
-        if (this.bK != 0 && this.bL != 0) {
-            ++this.bL;
+        if (this.bJ != 0 && this.bK != 0) {
+            ++this.bK;
         } else {
-            this.bK = this.random.nextInt(aentityvillager_imerchantrecipeoption.length) + 1;
-            this.bL = 1;
+            this.bJ = this.random.nextInt(aentityvillager_imerchantrecipeoption.length) + 1;
+            this.bK = 1;
         }
 
         if (this.trades == null) {
             this.trades = new MerchantRecipeList();
         }
 
-        int i = this.bK - 1;
-        int j = this.bL - 1;
+        int i = this.bJ - 1;
+        int j = this.bK - 1;
 
         if (i >= 0 && i < aentityvillager_imerchantrecipeoption.length) {
             EntityVillager.IMerchantRecipeOption[][] aentityvillager_imerchantrecipeoption1 = aentityvillager_imerchantrecipeoption[i];
@@ -460,55 +469,68 @@
                 for (int l = 0; l < k; ++l) {
                     EntityVillager.IMerchantRecipeOption entityvillager_imerchantrecipeoption = aentityvillager_imerchantrecipeoption3[l];
 
-                    entityvillager_imerchantrecipeoption.a(this, this.trades, this.random);
+                    // CraftBukkit start
+                    // this is a hack. this must be done because otherwise, if
+                    // mojang adds a new type of villager merchant option, it will need to
+                    // have event handling added manually. this is better than having to do that.
+                    MerchantRecipeList list = new MerchantRecipeList();
+                    entityvillager_imerchantrecipeoption.a(this, list, this.random);
+                    for (MerchantRecipe recipe : list) {
+                        VillagerAcquireTradeEvent event = new VillagerAcquireTradeEvent((Villager) getBukkitEntity(), recipe.asBukkit());
+                        Bukkit.getPluginManager().callEvent(event);
+                        if (!event.isCancelled()) {
+                            this.trades.add(CraftMerchantRecipe.fromBukkit(event.getRecipe()).toMinecraft());
+                        }
+                    }
+                    // CraftBukkit end
                 }
             }
 
         }
     }
 
-    public World u_() {
+    public World t_() {
         return this.world;
     }
 
-    public BlockPosition v_() {
+    public BlockPosition u_() {
         return new BlockPosition(this);
     }
 
     public IChatBaseComponent getScoreboardDisplayName() {
-        ScoreboardTeamBase scoreboardteambase = this.aW();
+        ScoreboardTeamBase scoreboardteambase = this.aQ();
         String s = this.getCustomName();
 
         if (s != null && !s.isEmpty()) {
             ChatComponentText chatcomponenttext = new ChatComponentText(ScoreboardTeam.getPlayerDisplayName(scoreboardteambase, s));
 
-            chatcomponenttext.getChatModifier().setChatHoverable(this.bt());
-            chatcomponenttext.getChatModifier().setInsertion(this.bl());
+            chatcomponenttext.getChatModifier().setChatHoverable(this.bn());
+            chatcomponenttext.getChatModifier().setInsertion(this.bf());
             return chatcomponenttext;
         } else {
             if (this.trades == null) {
-                this.dv();
+                this.dt();
             }
 
             String s1 = null;
 
             switch (this.getProfession()) {
             case 0:
-                if (this.bK == 1) {
+                if (this.bJ == 1) {
                     s1 = "farmer";
-                } else if (this.bK == 2) {
+                } else if (this.bJ == 2) {
                     s1 = "fisherman";
-                } else if (this.bK == 3) {
+                } else if (this.bJ == 3) {
                     s1 = "shepherd";
-                } else if (this.bK == 4) {
+                } else if (this.bJ == 4) {
                     s1 = "fletcher";
                 }
                 break;
 
             case 1:
-                if (this.bK == 1) {
+                if (this.bJ == 1) {
                     s1 = "librarian";
-                } else if (this.bK == 2) {
+                } else if (this.bJ == 2) {
                     s1 = "cartographer";
                 }
                 break;
@@ -518,19 +540,19 @@
                 break;
 
             case 3:
-                if (this.bK == 1) {
+                if (this.bJ == 1) {
                     s1 = "armor";
-                } else if (this.bK == 2) {
+                } else if (this.bJ == 2) {
                     s1 = "weapon";
-                } else if (this.bK == 3) {
+                } else if (this.bJ == 3) {
                     s1 = "tool";
                 }
                 break;
 
             case 4:
-                if (this.bK == 1) {
+                if (this.bJ == 1) {
                     s1 = "butcher";
-                } else if (this.bK == 2) {
+                } else if (this.bJ == 2) {
                     s1 = "leather";
                 }
                 break;
@@ -542,10 +564,10 @@
             if (s1 != null) {
                 ChatMessage chatmessage = new ChatMessage("entity.Villager." + s1, new Object[0]);
 
-                chatmessage.getChatModifier().setChatHoverable(this.bt());
-                chatmessage.getChatModifier().setInsertion(this.bl());
+                chatmessage.getChatModifier().setChatHoverable(this.bn());
+                chatmessage.getChatModifier().setInsertion(this.bf());
                 if (scoreboardteambase != null) {
-                    chatmessage.getChatModifier().setColor(scoreboardteambase.getColor());
+                    chatmessage.getChatModifier().setColor(scoreboardteambase.m());
                 }
 
                 return chatmessage;
@@ -570,13 +592,13 @@
             this.setProfession(this.world.random.nextInt(6));
         }
 
-        this.du();
-        this.dv();
+        this.ds();
+        this.dt();
         return groupdataentity;
     }
 
-    public void dn() {
-        this.bM = true;
+    public void dl() {
+        this.bL = true;
     }
 
     public EntityVillager b(EntityAgeable entityageable) {
@@ -596,7 +618,7 @@
 
             entitywitch.setPositionRotation(this.locX, this.locY, this.locZ, this.yaw, this.pitch);
             entitywitch.prepare(this.world.D(new BlockPosition(entitywitch)), (GroupDataEntity) null);
-            entitywitch.setNoAI(this.isNoAI());
+            entitywitch.setAI(this.hasAI());
             if (this.hasCustomName()) {
                 entitywitch.setCustomName(this.getCustomName());
                 entitywitch.setCustomNameVisible(this.getCustomNameVisible());
@@ -607,7 +629,7 @@
         }
     }
 
-    public InventorySubcontainer do_() {
+    public InventorySubcontainer dm() {
         return this.inventory;
     }
 
@@ -631,15 +653,15 @@
         return item == Items.BREAD || item == Items.POTATO || item == Items.CARROT || item == Items.WHEAT || item == Items.WHEAT_SEEDS || item == Items.BEETROOT || item == Items.BEETROOT_SEEDS;
     }
 
-    public boolean dp() {
+    public boolean dn() {
         return this.m(1);
     }
 
-    public boolean dq() {
+    public boolean do_() {
         return this.m(2);
     }
 
-    public boolean dr() {
+    public boolean dp() {
         boolean flag = this.getProfession() == 0;
 
         return flag ? !this.m(5) : !this.m(1);
@@ -665,7 +687,7 @@
         return false;
     }
 
-    public boolean ds() {
+    public boolean dq() {
         for (int i = 0; i < this.inventory.getSize(); ++i) {
             ItemStack itemstack = this.inventory.getItem(i);
 
@@ -732,8 +754,8 @@
 
         public void a(IMerchant imerchant, MerchantRecipeList merchantrecipelist, Random random) {
             int i = this.a.a(random);
-            World world = imerchant.u_();
-            BlockPosition blockposition = world.a(this.b, imerchant.v_(), true);
+            World world = imerchant.t_();
+            BlockPosition blockposition = world.a(this.b, imerchant.u_(), true);
 
             if (blockposition != null) {
                 ItemStack itemstack = ItemWorldMap.a(world, (double) blockposition.getX(), (double) blockposition.getZ(), (byte) 2, true, true);
@@ -754,7 +776,7 @@
         public void a(IMerchant imerchant, MerchantRecipeList merchantrecipelist, Random random) {
             Enchantment enchantment = (Enchantment) Enchantment.enchantments.a(random);
             int i = MathHelper.nextInt(random, enchantment.getStartLevel(), enchantment.getMaxLevel());
-            ItemStack itemstack = ItemEnchantedBook.a(new WeightedRandomEnchant(enchantment, i));
+            ItemStack itemstack = Items.ENCHANTED_BOOK.a(new WeightedRandomEnchant(enchantment, i));
             int j = 2 + random.nextInt(5 + i * 10) + 3 * i;
 
             if (enchantment.isTreasure()) {
@@ -861,7 +883,7 @@
         public MerchantOptionRandomRange(int i, int j) {
             super(Integer.valueOf(i), Integer.valueOf(j));
             if (j < i) {
-                EntityVillager.by.warn("PriceRange({}, {}) invalid, {} smaller than {}", Integer.valueOf(i), Integer.valueOf(j), Integer.valueOf(j), Integer.valueOf(i));
+                EntityVillager.bx.warn("PriceRange({}, {}) invalid, {} smaller than {}", new Object[] { Integer.valueOf(i), Integer.valueOf(j), Integer.valueOf(j), Integer.valueOf(i)});
             }
 
         }
