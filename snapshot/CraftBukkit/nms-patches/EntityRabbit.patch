--- a/net/minecraft/server/EntityRabbit.java
+++ b/net/minecraft/server/EntityRabbit.java
@@ -4,20 +4,26 @@
 
 public class EntityRabbit extends EntityAnimal {
 
-    private static final DataWatcherObject<Integer> bx = DataWatcher.a(EntityRabbit.class, DataWatcherRegistry.b);
+    private static final DataWatcherObject<Integer> bw = DataWatcher.a(EntityRabbit.class, DataWatcherRegistry.b);
+    private int bx;
     private int by;
-    private int bz;
-    private boolean bB;
+    private boolean bA;
+    private int bB;
     private int bC;
-    private int bD;
 
     public EntityRabbit(World world) {
         super(world);
         this.setSize(0.4F, 0.5F);
         this.g = new EntityRabbit.ControllerJumpRabbit(this);
         this.moveController = new EntityRabbit.ControllerMoveRabbit(this);
+        this.initializePathFinderGoals(); // CraftBukkit - moved code
+    }
+
+    // CraftBukkit start - code from constructor
+    public void initializePathFinderGoals(){
         this.c(0.0D);
     }
+    // CraftBukkit end
 
     protected void r() {
         this.goalSelector.a(1, new PathfinderGoalFloat(this));
@@ -34,9 +40,9 @@
         this.goalSelector.a(11, new PathfinderGoalLookAtPlayer(this, EntityHuman.class, 10.0F));
     }
 
-    protected float cr() {
-        if (!this.positionChanged && (!this.moveController.b() || this.moveController.e() <= this.locY + 0.5D)) {
-            PathEntity pathentity = this.navigation.l();
+    protected float cl() {
+        if (!this.positionChanged && (!this.moveController.a() || this.moveController.e() <= this.locY + 0.5D)) {
+            PathEntity pathentity = this.navigation.k();
 
             if (pathentity != null && pathentity.e() < pathentity.d()) {
                 Vec3D vec3d = pathentity.a((Entity) this);
@@ -46,21 +52,21 @@
                 }
             }
 
-            return this.moveController.c() <= 0.6D ? 0.2F : 0.3F;
+            return this.moveController.b() <= 0.6D ? 0.2F : 0.3F;
         } else {
             return 0.5F;
         }
     }
 
-    protected void cs() {
-        super.cs();
-        double d0 = this.moveController.c();
+    protected void cm() {
+        super.cm();
+        double d0 = this.moveController.b();
 
         if (d0 > 0.0D) {
             double d1 = this.motX * this.motX + this.motZ * this.motZ;
 
             if (d1 < 0.010000000000000002D) {
-                this.b(0.0F, 0.0F, 1.0F, 0.1F);
+                this.a(0.0F, 1.0F, 0.1F);
             }
         }
 
@@ -78,56 +84,56 @@
     public void l(boolean flag) {
         super.l(flag);
         if (flag) {
-            this.a(this.dk(), this.co(), ((this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F) * 0.8F);
+            this.a(this.di(), this.ci(), ((this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F) * 0.8F);
         }
 
     }
 
-    public void dj() {
+    public void dh() {
         this.l(true);
-        this.bz = 10;
-        this.by = 0;
+        this.by = 10;
+        this.bx = 0;
     }
 
     protected void i() {
         super.i();
-        this.datawatcher.register(EntityRabbit.bx, Integer.valueOf(0));
+        this.datawatcher.register(EntityRabbit.bw, Integer.valueOf(0));
     }
 
     public void M() {
-        if (this.bC > 0) {
-            --this.bC;
+        if (this.bB > 0) {
+            --this.bB;
         }
 
-        if (this.bD > 0) {
-            this.bD -= this.random.nextInt(3);
-            if (this.bD < 0) {
-                this.bD = 0;
+        if (this.bC > 0) {
+            this.bC -= this.random.nextInt(3);
+            if (this.bC < 0) {
+                this.bC = 0;
             }
         }
 
         if (this.onGround) {
-            if (!this.bB) {
+            if (!this.bA) {
                 this.l(false);
-                this.dt();
+                this.dr();
             }
 
-            if (this.getRabbitType() == 99 && this.bC == 0) {
+            if (this.getRabbitType() == 99 && this.bB == 0) {
                 EntityLiving entityliving = this.getGoalTarget();
 
                 if (entityliving != null && this.h(entityliving) < 16.0D) {
                     this.a(entityliving.locX, entityliving.locZ);
-                    this.moveController.a(entityliving.locX, entityliving.locY, entityliving.locZ, this.moveController.c());
-                    this.dj();
-                    this.bB = true;
+                    this.moveController.a(entityliving.locX, entityliving.locY, entityliving.locZ, this.moveController.b());
+                    this.dh();
+                    this.bA = true;
                 }
             }
 
             EntityRabbit.ControllerJumpRabbit entityrabbit_controllerjumprabbit = (EntityRabbit.ControllerJumpRabbit) this.g;
 
             if (!entityrabbit_controllerjumprabbit.c()) {
-                if (this.moveController.b() && this.bC == 0) {
-                    PathEntity pathentity = this.navigation.l();
+                if (this.moveController.a() && this.bB == 0) {
+                    PathEntity pathentity = this.navigation.k();
                     Vec3D vec3d = new Vec3D(this.moveController.d(), this.moveController.e(), this.moveController.f());
 
                     if (pathentity != null && pathentity.e() < pathentity.d()) {
@@ -135,51 +141,51 @@
                     }
 
                     this.a(vec3d.x, vec3d.z);
-                    this.dj();
+                    this.dh();
                 }
             } else if (!entityrabbit_controllerjumprabbit.d()) {
-                this.dn();
+                this.dl();
             }
         }
 
-        this.bB = this.onGround;
+        this.bA = this.onGround;
     }
 
-    public void as() {}
+    public void am() {}
 
     private void a(double d0, double d1) {
         this.yaw = (float) (MathHelper.c(d1 - this.locZ, d0 - this.locX) * 57.2957763671875D) - 90.0F;
     }
 
-    private void dn() {
+    private void dl() {
         ((EntityRabbit.ControllerJumpRabbit) this.g).a(true);
     }
 
-    private void dr() {
+    private void dp() {
         ((EntityRabbit.ControllerJumpRabbit) this.g).a(false);
     }
 
-    private void ds() {
-        if (this.moveController.c() < 2.2D) {
-            this.bC = 10;
+    private void dq() {
+        if (this.moveController.b() < 2.2D) {
+            this.bB = 10;
         } else {
-            this.bC = 1;
+            this.bB = 1;
         }
 
     }
 
-    private void dt() {
-        this.ds();
-        this.dr();
+    private void dr() {
+        this.dq();
+        this.dp();
     }
 
     public void n() {
         super.n();
-        if (this.by != this.bz) {
-            ++this.by;
-        } else if (this.bz != 0) {
+        if (this.bx != this.by) {
+            ++this.bx;
+        } else if (this.by != 0) {
+            this.bx = 0;
             this.by = 0;
-            this.bz = 0;
             this.l(false);
         }
 
@@ -198,41 +204,41 @@
     public void b(NBTTagCompound nbttagcompound) {
         super.b(nbttagcompound);
         nbttagcompound.setInt("RabbitType", this.getRabbitType());
-        nbttagcompound.setInt("MoreCarrotTicks", this.bD);
+        nbttagcompound.setInt("MoreCarrotTicks", this.bC);
     }
 
     public void a(NBTTagCompound nbttagcompound) {
         super.a(nbttagcompound);
         this.setRabbitType(nbttagcompound.getInt("RabbitType"));
-        this.bD = nbttagcompound.getInt("MoreCarrotTicks");
+        this.bC = nbttagcompound.getInt("MoreCarrotTicks");
     }
 
-    protected SoundEffect dk() {
-        return SoundEffects.fZ;
+    protected SoundEffect di() {
+        return SoundEffects.eY;
     }
 
-    protected SoundEffect F() {
-        return SoundEffects.fV;
+    protected SoundEffect G() {
+        return SoundEffects.eU;
     }
 
-    protected SoundEffect d(DamageSource damagesource) {
-        return SoundEffects.fY;
+    protected SoundEffect bW() {
+        return SoundEffects.eX;
     }
 
-    protected SoundEffect cd() {
-        return SoundEffects.fX;
+    protected SoundEffect bX() {
+        return SoundEffects.eW;
     }
 
     public boolean B(Entity entity) {
         if (this.getRabbitType() == 99) {
-            this.a(SoundEffects.fW, 1.0F, (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F);
+            this.a(SoundEffects.eV, 1.0F, (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F);
             return entity.damageEntity(DamageSource.mobAttack(this), 8.0F);
         } else {
             return entity.damageEntity(DamageSource.mobAttack(this), 3.0F);
         }
     }
 
-    public SoundCategory bI() {
+    public SoundCategory bC() {
         return this.getRabbitType() == 99 ? SoundCategory.HOSTILE : SoundCategory.NEUTRAL;
     }
 
@@ -251,7 +257,7 @@
 
     public EntityRabbit b(EntityAgeable entityageable) {
         EntityRabbit entityrabbit = new EntityRabbit(this.world);
-        int i = this.du();
+        int i = this.ds();
 
         if (this.random.nextInt(20) != 0) {
             if (entityageable instanceof EntityRabbit && this.random.nextBoolean()) {
@@ -270,12 +276,12 @@
     }
 
     public int getRabbitType() {
-        return ((Integer) this.datawatcher.get(EntityRabbit.bx)).intValue();
+        return ((Integer) this.datawatcher.get(EntityRabbit.bw)).intValue();
     }
 
     public void setRabbitType(int i) {
         if (i == 99) {
-            this.getAttributeInstance(GenericAttributes.h).setValue(8.0D);
+            this.getAttributeInstance(GenericAttributes.g).setValue(8.0D);
             this.goalSelector.a(4, new EntityRabbit.PathfinderGoalKillerRabbitMeleeAttack(this));
             this.targetSelector.a(1, new PathfinderGoalHurtByTarget(this, false, new Class[0]));
             this.targetSelector.a(2, new PathfinderGoalNearestAttackableTarget(this, EntityHuman.class, true));
@@ -285,13 +291,13 @@
             }
         }
 
-        this.datawatcher.set(EntityRabbit.bx, Integer.valueOf(i));
+        this.datawatcher.set(EntityRabbit.bw, Integer.valueOf(i));
     }
 
     @Nullable
     public GroupDataEntity prepare(DifficultyDamageScaler difficultydamagescaler, @Nullable GroupDataEntity groupdataentity) {
         Object object = super.prepare(difficultydamagescaler, groupdataentity);
-        int i = this.du();
+        int i = this.ds();
         boolean flag = false;
 
         if (object instanceof EntityRabbit.GroupDataRabbit) {
@@ -309,23 +315,23 @@
         return (GroupDataEntity) object;
     }
 
-    private int du() {
+    private int ds() {
         BiomeBase biomebase = this.world.getBiome(new BlockPosition(this));
         int i = this.random.nextInt(100);
 
         return biomebase.p() ? (i < 80 ? 1 : 3) : (biomebase instanceof BiomeDesert ? 4 : (i < 50 ? 0 : (i < 90 ? 5 : 2)));
     }
 
-    private boolean dv() {
-        return this.bD == 0;
+    private boolean dt() {
+        return this.bC == 0;
     }
 
-    protected void dm() {
+    protected void dk() {
         BlockCarrots blockcarrots = (BlockCarrots) Blocks.CARROTS;
         IBlockData iblockdata = blockcarrots.setAge(blockcarrots.g());
 
         this.world.addParticle(EnumParticle.BLOCK_DUST, this.locX + (double) (this.random.nextFloat() * this.width * 2.0F) - (double) this.width, this.locY + 0.5D + (double) (this.random.nextFloat() * this.length), this.locZ + (double) (this.random.nextFloat() * this.width * 2.0F) - (double) this.width, 0.0D, 0.0D, 0.0D, new int[] { Block.getCombinedId(iblockdata)});
-        this.bD = 40;
+        this.bC = 40;
     }
 
     public EntityAgeable createChild(EntityAgeable entityageable) {
@@ -345,16 +351,16 @@
 
     static class PathfinderGoalRabbitPanic extends PathfinderGoalPanic {
 
-        private final EntityRabbit f;
+        private final EntityRabbit b;
 
         public PathfinderGoalRabbitPanic(EntityRabbit entityrabbit, double d0) {
             super(entityrabbit, d0);
-            this.f = entityrabbit;
+            this.b = entityrabbit;
         }
 
         public void e() {
             super.e();
-            this.f.c(this.b);
+            this.b.c(this.a);
         }
     }
 
@@ -376,7 +382,7 @@
                 }
 
                 this.e = false;
-                this.d = this.c.dv();
+                this.d = this.c.dt();
                 this.d = true;
             }
 
@@ -400,14 +406,28 @@
                     Integer integer = (Integer) iblockdata.get(BlockCarrots.AGE);
 
                     if (integer.intValue() == 0) {
+                        // CraftBukkit start
+                        if (org.bukkit.craftbukkit.event.CraftEventFactory.callEntityChangeBlockEvent(this.c, blockposition, Blocks.AIR, 0).isCancelled()) {
+                            return;
+                        }
+                        // CraftBukkit end
                         world.setTypeAndData(blockposition, Blocks.AIR.getBlockData(), 2);
                         world.setAir(blockposition, true);
                     } else {
+                        // CraftBukkit start
+                        if (org.bukkit.craftbukkit.event.CraftEventFactory.callEntityChangeBlockEvent(
+                                this.c,
+                                blockposition,
+                                block, block.toLegacyData(iblockdata.set(BlockCarrots.AGE, Integer.valueOf(integer.intValue() - 1)))
+                        ).isCancelled()) {
+                            return;
+                        }
+                        // CraftBukkit end
                         world.setTypeAndData(blockposition, iblockdata.set(BlockCarrots.AGE, Integer.valueOf(integer.intValue() - 1)), 2);
                         world.triggerEffect(2001, blockposition, Block.getCombinedId(iblockdata));
                     }
 
-                    this.c.dm();
+                    this.c.dk();
                 }
 
                 this.e = false;
@@ -424,7 +444,7 @@
                 IBlockData iblockdata = world.getType(blockposition);
 
                 block = iblockdata.getBlock();
-                if (block instanceof BlockCarrots && ((BlockCarrots) block).z(iblockdata)) {
+                if (block instanceof BlockCarrots && ((BlockCarrots) block).A(iblockdata)) {
                     this.e = true;
                     return true;
                 }
@@ -458,14 +478,14 @@
             this.i = entityrabbit;
         }
 
-        public void a() {
+        public void c() {
             if (this.i.onGround && !this.i.bd && !((EntityRabbit.ControllerJumpRabbit) this.i.g).c()) {
                 this.i.c(0.0D);
-            } else if (this.b()) {
+            } else if (this.a()) {
                 this.i.c(this.j);
             }
 
-            super.a();
+            super.c();
         }
 
         public void a(double d0, double d1, double d2, double d3) {
@@ -505,7 +525,7 @@
 
         public void b() {
             if (this.a) {
-                this.c.dj();
+                this.c.dh();
                 this.a = false;
             }
 
