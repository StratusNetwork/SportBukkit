--- a/net/minecraft/server/PathfinderGoalTarget.java
+++ b/net/minecraft/server/PathfinderGoalTarget.java
@@ -1,6 +1,7 @@
 package net.minecraft.server;
 
 import javax.annotation.Nullable;
+import org.bukkit.event.entity.EntityTargetEvent; // CraftBukkit
 
 public abstract class PathfinderGoalTarget extends PathfinderGoal {
 
@@ -36,8 +37,8 @@
         } else if (!entityliving.isAlive()) {
             return false;
         } else {
-            ScoreboardTeamBase scoreboardteambase = this.e.aW();
-            ScoreboardTeamBase scoreboardteambase1 = entityliving.aW();
+            ScoreboardTeamBase scoreboardteambase = this.e.aQ();
+            ScoreboardTeamBase scoreboardteambase1 = entityliving.aQ();
 
             if (scoreboardteambase != null && scoreboardteambase1 == scoreboardteambase) {
                 return false;
@@ -58,7 +59,7 @@
                     if (entityliving instanceof EntityHuman && ((EntityHuman) entityliving).abilities.isInvulnerable) {
                         return false;
                     } else {
-                        this.e.setGoalTarget(entityliving);
+                        this.e.setGoalTarget(entityliving, EntityTargetEvent.TargetReason.CLOSEST_ENTITY, true); // CraftBukkit
                         return true;
                     }
                 }
@@ -79,7 +80,7 @@
     }
 
     public void d() {
-        this.e.setGoalTarget((EntityLiving) null);
+        this.e.setGoalTarget((EntityLiving) null, EntityTargetEvent.TargetReason.FORGOT_TARGET, true); // CraftBukkit
         this.g = null;
     }
 
@@ -96,7 +97,7 @@
             return false;
         } else {
             if (entityinsentient instanceof EntityOwnable && ((EntityOwnable) entityinsentient).getOwnerUUID() != null) {
-                if (entityliving instanceof EntityOwnable && ((EntityOwnable) entityinsentient).getOwnerUUID().equals(((EntityOwnable) entityliving).getOwnerUUID())) {
+                if (entityliving instanceof EntityOwnable && ((EntityOwnable) entityinsentient).getOwnerUUID().equals(entityliving.getUniqueID())) {
                     return false;
                 }
 
