--- a/net/minecraft/server/EntityMinecartAbstract.java
+++ b/net/minecraft/server/EntityMinecartAbstract.java
@@ -6,6 +6,15 @@
 import java.util.Map;
 import javax.annotation.Nullable;
 
+// CraftBukkit start
+import org.bukkit.Location;
+import org.bukkit.entity.Vehicle;
+import org.bukkit.event.vehicle.VehicleDamageEvent;
+import org.bukkit.event.vehicle.VehicleDestroyEvent;
+import org.bukkit.event.vehicle.VehicleEntityCollisionEvent;
+import org.bukkit.util.Vector;
+// CraftBukkit end
+
 public abstract class EntityMinecartAbstract extends Entity implements INamableTileEntity {
 
     private static final DataWatcherObject<Integer> a = DataWatcher.a(EntityMinecartAbstract.class, DataWatcherRegistry.b);
@@ -23,6 +32,17 @@
     private double ax;
     private double ay;
 
+    // CraftBukkit start
+    public boolean slowWhenEmpty = true;
+    private double derailedX = 0.5;
+    private double derailedY = 0.5;
+    private double derailedZ = 0.5;
+    private double flyingX = 0.95;
+    private double flyingY = 0.95;
+    private double flyingZ = 0.95;
+    public double maxSpeed = 0.4D;
+    // CraftBukkit end
+
     public EntityMinecartAbstract(World world) {
         super(world);
         this.i = true;
@@ -73,7 +93,7 @@
     }
 
     @Nullable
-    public AxisAlignedBB al() {
+    public AxisAlignedBB ag() {
         return null;
     }
 
@@ -90,9 +110,11 @@
         this.lastX = d0;
         this.lastY = d1;
         this.lastZ = d2;
+
+        this.world.getServer().getPluginManager().callEvent(new org.bukkit.event.vehicle.VehicleCreateEvent((Vehicle) this.getBukkitEntity())); // CraftBukkit
     }
 
-    public double aE() {
+    public double ay() {
         return 0.0D;
     }
 
@@ -101,14 +123,36 @@
             if (this.isInvulnerable(damagesource)) {
                 return false;
             } else {
+                // CraftBukkit start - fire VehicleDamageEvent
+                Vehicle vehicle = (Vehicle) this.getBukkitEntity();
+                org.bukkit.entity.Entity passenger = (damagesource.getEntity() == null) ? null : damagesource.getEntity().getBukkitEntity();
+
+                VehicleDamageEvent event = new VehicleDamageEvent(vehicle, passenger, f);
+                this.world.getServer().getPluginManager().callEvent(event);
+
+                if (event.isCancelled()) {
+                    return false;
+                }
+
+                f = (float) event.getDamage();
+                // CraftBukkit end
                 this.e(-this.u());
                 this.d(10);
-                this.av();
+                this.ap();
                 this.setDamage(this.getDamage() + f * 10.0F);
                 boolean flag = damagesource.getEntity() instanceof EntityHuman && ((EntityHuman) damagesource.getEntity()).abilities.canInstantlyBuild;
 
                 if (flag || this.getDamage() > 40.0F) {
-                    this.ejectPassengers();
+                    // CraftBukkit start
+                    VehicleDestroyEvent destroyEvent = new VehicleDestroyEvent(vehicle, passenger);
+                    this.world.getServer().getPluginManager().callEvent(destroyEvent);
+
+                    if (destroyEvent.isCancelled()) {
+                        this.setDamage(40); // Maximize damage so this doesn't get triggered again right away
+                        return true;
+                    }
+                    // CraftBukkit end
+                    this.az();
                     if (flag && !this.hasCustomName()) {
                         this.die();
                     } else {
@@ -141,11 +185,19 @@
         return !this.dead;
     }
 
-    public EnumDirection bs() {
+    public EnumDirection bm() {
         return this.g ? this.getDirection().opposite().e() : this.getDirection().e();
     }
 
-    public void B_() {
+    public void A_() {
+        // CraftBukkit start
+        double prevX = this.locX;
+        double prevY = this.locY;
+        double prevZ = this.locZ;
+        float prevYaw = this.yaw;
+        float prevPitch = this.pitch;
+        // CraftBukkit end
+
         if (this.getType() > 0) {
             this.d(this.getType() - 1);
         }
@@ -155,7 +207,7 @@
         }
 
         if (this.locY < -64.0D) {
-            this.ac();
+            this.Y();
         }
 
         int i;
@@ -164,12 +216,12 @@
             this.world.methodProfiler.a("portal");
             MinecraftServer minecraftserver = this.world.getMinecraftServer();
 
-            i = this.Z();
+            i = this.V();
             if (this.ak) {
-                if (minecraftserver.getAllowNether()) {
+                if (true || minecraftserver.getAllowNether()) { // CraftBukkit - multi-world should still allow teleport even if default vanilla nether disabled
                     if (!this.isPassenger() && this.al++ >= i) {
                         this.al = i;
-                        this.portalCooldown = this.aK();
+                        this.portalCooldown = this.aE();
                         byte b0;
 
                         if (this.world.worldProvider.getDimensionManager().getDimensionID() == -1) {
@@ -178,7 +230,7 @@
                             b0 = -1;
                         }
 
-                        this.b(b0);
+                        this.c(b0);
                     }
 
                     this.ak = false;
@@ -266,6 +318,18 @@
             }
 
             this.setYawPitch(this.yaw, this.pitch);
+            // CraftBukkit start
+            org.bukkit.World bworld = this.world.getWorld();
+            Location from = new Location(bworld, prevX, prevY, prevZ, prevYaw, prevPitch);
+            Location to = new Location(bworld, this.locX, this.locY, this.locZ, this.yaw, this.pitch);
+            Vehicle vehicle = (Vehicle) this.getBukkitEntity();
+
+            this.world.getServer().getPluginManager().callEvent(new org.bukkit.event.vehicle.VehicleUpdateEvent(vehicle));
+
+            if (!from.equals(to)) {
+                this.world.getServer().getPluginManager().callEvent(new org.bukkit.event.vehicle.VehicleMoveEvent(vehicle, from, to));
+            }
+            // CraftBukkit end
             if (this.v() == EntityMinecartAbstract.EnumMinecartType.RIDEABLE && this.motX * this.motX + this.motZ * this.motZ > 0.01D) {
                 List list = this.world.getEntities(this, this.getBoundingBox().grow(0.20000000298023224D, 0.0D, 0.20000000298023224D), IEntitySelector.a(this));
 
@@ -274,8 +338,24 @@
                         Entity entity = (Entity) list.get(l);
 
                         if (!(entity instanceof EntityHuman) && !(entity instanceof EntityIronGolem) && !(entity instanceof EntityMinecartAbstract) && !this.isVehicle() && !entity.isPassenger()) {
+                            // CraftBukkit start
+                            VehicleEntityCollisionEvent collisionEvent = new VehicleEntityCollisionEvent(vehicle, entity.getBukkitEntity());
+                            this.world.getServer().getPluginManager().callEvent(collisionEvent);
+
+                            if (collisionEvent.isCancelled()) {
+                                continue;
+                            }
+                            // CraftBukkit end
                             entity.startRiding(this);
                         } else {
+                            // CraftBukkit start
+                            VehicleEntityCollisionEvent collisionEvent = new VehicleEntityCollisionEvent(vehicle, entity.getBukkitEntity());
+                            this.world.getServer().getPluginManager().callEvent(collisionEvent);
+
+                            if (collisionEvent.isCancelled()) {
+                                continue;
+                            }
+                            // CraftBukkit end
                             entity.collide(this);
                         }
                     }
@@ -287,37 +367,49 @@
                     Entity entity1 = (Entity) iterator.next();
 
                     if (!this.w(entity1) && entity1.isCollidable() && entity1 instanceof EntityMinecartAbstract) {
+                        // CraftBukkit start
+                        VehicleEntityCollisionEvent collisionEvent = new VehicleEntityCollisionEvent(vehicle, entity1.getBukkitEntity());
+                        this.world.getServer().getPluginManager().callEvent(collisionEvent);
+
+                        if (collisionEvent.isCancelled()) {
+                            continue;
+                        }
+                        // CraftBukkit end
                         entity1.collide(this);
                     }
                 }
             }
 
-            this.aq();
+            this.ak();
         }
     }
 
-    protected double p() {
-        return 0.4D;
+    protected double o() {
+        return this.maxSpeed; // CraftBukkit
     }
 
     public void a(int i, int j, int k, boolean flag) {}
 
     protected void q() {
-        double d0 = this.p();
+        double d0 = this.o();
 
         this.motX = MathHelper.a(this.motX, -d0, d0);
         this.motZ = MathHelper.a(this.motZ, -d0, d0);
         if (this.onGround) {
-            this.motX *= 0.5D;
-            this.motY *= 0.5D;
-            this.motZ *= 0.5D;
+            // CraftBukkit start - replace magic numbers with our variables
+            this.motX *= this.derailedX;
+            this.motY *= this.derailedY;
+            this.motZ *= this.derailedZ;
+            // CraftBukkit end
         }
 
         this.move(EnumMoveType.SELF, this.motX, this.motY, this.motZ);
         if (!this.onGround) {
-            this.motX *= 0.949999988079071D;
-            this.motY *= 0.949999988079071D;
-            this.motZ *= 0.949999988079071D;
+            // CraftBukkit start - replace magic numbers with our variables
+            this.motX *= this.flyingX;
+            this.motY *= this.flyingY;
+            this.motZ *= this.flyingZ;
+            // CraftBukkit end
         }
 
     }
@@ -379,14 +471,14 @@
 
         this.motX = d5 * d1 / d3;
         this.motZ = d5 * d2 / d3;
-        Entity entity = this.bD().isEmpty() ? null : (Entity) this.bD().get(0);
+        Entity entity = this.bx().isEmpty() ? null : (Entity) this.bx().get(0);
         double d6;
         double d7;
         double d8;
         double d9;
 
         if (entity instanceof EntityLiving) {
-            d6 = (double) ((EntityLiving) entity).bg;
+            d6 = (double) ((EntityLiving) entity).bf;
             if (d6 > 0.0D) {
                 d7 = -Math.sin((double) (entity.yaw * 0.017453292F));
                 d8 = Math.cos((double) (entity.yaw * 0.017453292F));
@@ -444,7 +536,7 @@
             d12 *= 0.75D;
         }
 
-        double d13 = this.p();
+        double d13 = this.o();
 
         d11 = MathHelper.a(d11, -d13, d13);
         d12 = MathHelper.a(d12, -d13, d13);
@@ -488,15 +580,15 @@
                 this.motX += this.motX / d15 * 0.06D;
                 this.motZ += this.motZ / d15 * 0.06D;
             } else if (blockminecarttrackabstract_enumtrackposition == BlockMinecartTrackAbstract.EnumTrackPosition.EAST_WEST) {
-                if (this.world.getType(blockposition.west()).l()) {
+                if (this.world.getType(blockposition.west()).m()) {
                     this.motX = 0.02D;
-                } else if (this.world.getType(blockposition.east()).l()) {
+                } else if (this.world.getType(blockposition.east()).m()) {
                     this.motX = -0.02D;
                 }
             } else if (blockminecarttrackabstract_enumtrackposition == BlockMinecartTrackAbstract.EnumTrackPosition.NORTH_SOUTH) {
-                if (this.world.getType(blockposition.north()).l()) {
+                if (this.world.getType(blockposition.north()).m()) {
                     this.motZ = 0.02D;
-                } else if (this.world.getType(blockposition.south()).l()) {
+                } else if (this.world.getType(blockposition.south()).m()) {
                     this.motZ = -0.02D;
                 }
             }
@@ -505,7 +597,7 @@
     }
 
     protected void r() {
-        if (this.isVehicle()) {
+        if (this.isVehicle() || !this.slowWhenEmpty) { // CraftBukkit - add !this.slowWhenEmpty
             this.motX *= 0.996999979019165D;
             this.motY *= 0.0D;
             this.motZ *= 0.996999979019165D;
@@ -780,4 +872,26 @@
 
         }
     }
+
+    // CraftBukkit start - Methods for getting and setting flying and derailed velocity modifiers
+    public Vector getFlyingVelocityMod() {
+        return new Vector(flyingX, flyingY, flyingZ);
+    }
+
+    public void setFlyingVelocityMod(Vector flying) {
+        flyingX = flying.getX();
+        flyingY = flying.getY();
+        flyingZ = flying.getZ();
+    }
+
+    public Vector getDerailedVelocityMod() {
+        return new Vector(derailedX, derailedY, derailedZ);
+    }
+
+    public void setDerailedVelocityMod(Vector derailed) {
+        derailedX = derailed.getX();
+        derailedY = derailed.getY();
+        derailedZ = derailed.getZ();
+    }
+    // CraftBukkit end
 }
