From: Jedediah Smith <jedediah@silencegreys.com>
Date: Tue, 29 Mar 2016 02:13:07 -0400
Subject: [PATCH] Attack cooldown info API


diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -971,7 +971,7 @@ public abstract class EntityHuman extends EntityLiving {
 
                 f *= 0.2F + f2 * f2 * 0.8F;
                 f1 *= f2;
-                this.ds();
+                // this.ds();   SportBukkit - don't reset cooldown here, let the arm swing packet do it
                 if (f > 0.0F || f1 > 0.0F) {
                     boolean flag = f2 > 0.9F;
                     boolean flag1 = false;
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -55,7 +55,7 @@ public abstract class EntityLiving extends Entity {
     public int deathTicks;
     public float aC;
     public float aD;
-    protected int aE;
+    protected int aE; public int ticksSinceLastAttack() { return aE; } // SportBukkit - add accessor
     public float aF;
     public float aG;
     public float aH;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
@@ -522,6 +522,17 @@ public class CraftHumanEntity extends CraftLivingEntity implements HumanEntity {
     }
 
     @Override
+    public int getAttackCooldownTicks() {
+        return Math.max(getHandle().ticksSinceLastAttack(), getHandle().clientTicksSinceLastAttack);
+    }
+
+    @Override
+    public float getAttackCooldownCoefficient() {
+        final float f = getHandle().p(0.5f);
+        return 0.2f + f * f * 0.8f;
+    }
+
+    @Override
     public int getCooldown(Material material) {
         Preconditions.checkArgument(material != null, "material");
 
